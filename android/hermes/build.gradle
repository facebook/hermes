/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

apply plugin: 'com.android.library'

def facebookBuild = System.getenv("FACEBOOK") ?: "0"
def hermesHostBuild = System.getenv("HERMES_WS_DIR")

// For Facebook internal use:
def fbsource = System.getenv("FBSOURCE_DIR") ?:
    System.getenv("HOME") + "/fbsource"

buildDir = "${rootProject.ext.hermes_ws}/build_android/hermes"
buildDir.mkdirs()

preBuild.doFirst {
  // The Hermes compiler cmake file is required to exist before
  // cross-compilation can happen.
  assert hermesHostBuild != null
  assert file("${hermesHostBuild}/build/ImportHermesc.cmake").exists()
}

android {
  compileSdkVersion = rootProject.ext.compileSdkVersion

  defaultConfig {
    minSdkVersion = rootProject.ext.minSdkVersion
    externalNativeBuild {
      cmake {
        arguments "-DHERMES_IS_ANDROID=True"
        arguments "-DHERMES_FACEBOOK_BUILD=${facebookBuild}"
        arguments "-DANDROID_STL=c++_shared"
        arguments "-DANDROID_PIE=True"
        arguments "-DIMPORT_HERMESC=${hermesHostBuild}/build/ImportHermesc.cmake"
        arguments "-DLLVM_BUILD_BASE=${hermes_ws}/llvm"
        arguments "-DLLVM_SRC_DIR=${hermes_ws}/llvm"
        arguments "-DFBSOURCE_DIR=${fbsource}"
        arguments "-DHERMES_SLOW_DEBUG=False"
        arguments "-DHERMES_ENABLE_INTL=False"
        targets "libhermes"
      }
    }
    ndk {
      abiFilters (*rootProject.ext.abis)
    }
  }

  externalNativeBuild {
    cmake {
      version "3.6.0"
      path "../../CMakeLists.txt"
      buildStagingDirectory = "${rootProject.ext.hermes_ws}/staging/hermes"
      buildStagingDirectory.mkdirs()
    }
  }

  buildTypes {
    debug {
      externalNativeBuild {
        cmake {
          arguments "-DHERMES_ENABLE_DEBUGGER=True"
        }
      }
    }
  }

  packagingOptions {
    exclude "**/libc++_shared.so"
  }

  afterEvaluate {
    // Gradle 4/5.0 outputs android-debug.aar and android-release.aar
    // Gradle 5.1 outputs android.aar for both
    // Unify the two by renaming the files afterwards.
    // Neither appear to care whether the original filename actually exists.
    def aarDir = "$buildDir/outputs/aar"
    tasks.named("assembleDebug").configure {
      doLast {
        file("$aarDir/hermes-debug.aar").renameTo("${rootProject.ext.outputDir}/hermes-debug.aar")
        file("$aarDir/hermes.aar").renameTo("${rootProject.ext.outputDir}/hermes-debug.aar")
      }
    }
    tasks.named("assembleRelease").configure {
      doLast {
        file("$aarDir/hermes-release.aar").renameTo("${rootProject.ext.outputDir}/hermes-release.aar")
        file("$aarDir/hermes.aar").renameTo("${rootProject.ext.outputDir}/hermes-release.aar")
      }
    }
    tasks.named("transformNativeLibsWithMergeJniLibsForDebug").configure {
      doLast { task ->
        copy {
          from(task)
          into("${rootProject.ext.outputDir}/unstripped-debug")
        }
      }
    }
    tasks.named("transformNativeLibsWithMergeJniLibsForRelease").configure {
      doLast { task ->
        copy {
          from(task)
          into("${rootProject.ext.outputDir}/unstripped-release")
        }
      }
    }
  }
}
