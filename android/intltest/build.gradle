/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// To run intltests, cd hermes/android and run:
//   ./gradlew intl:connectedAndroidTest

plugins {
  id('com.android.library')
  id("de.undercouch.download")
}

import de.undercouch.gradle.tasks.download.Download

buildDir = "${rootProject.ext.hermes_ws}/build_android/intltest"
buildDir.mkdirs()

// Download the test262 snapshot at c27f6a (June 30 2021).
def test262CommitHash = "c27f6a5b9a30c219b3b95769d52dc587a9af61ab"
def test262DownloadsDirPath = "${rootProject.ext.hermes_ws}/build_android/intltest/downloads/test262"
def test262Staging = "${rootProject.ext.hermes_ws}/build_android/intltest/downloads/test262-staging"
def test262Destination = "java/com/facebook/hermes/test/assets"
task createDownloadsDir {
  new File(test262DownloadsDirPath).mkdirs()
}

task downloadTest262(dependsOn: createDownloadsDir, type: Download) {
  src("https://github.com/tc39/test262/archive/${test262CommitHash}.zip")
  onlyIfNewer(true)
  overwrite(true)
  dest(new File(test262DownloadsDirPath, "test262.zip"))
}

task preparetest262(dependsOn: downloadTest262) {
  doLast {
    // Only include the Intl402 test from the downloaded test262.
    copy{
      from(zipTree(downloadTest262.dest)) {
        include("test262-${test262CommitHash}/test/intl402/Collator/**/*.js")
        include("test262-${test262CommitHash}/test/intl402/DateTimeFormat/**/*.js")
        include("test262-${test262CommitHash}/test/intl402/NumberFormat/**/*.js")
        include("test262-${test262CommitHash}/test/intl402/String/**/*.js")
        include("test262-${test262CommitHash}/test/intl402/Number/**/*.js")
        include("test262-${test262CommitHash}/test/intl402/Array/**/*.js")
        include("test262-${test262CommitHash}/test/intl402/Date/**/*.js")
        include("test262-${test262CommitHash}/test/intl402/Intl/**/*.js")
        include("test262-${test262CommitHash}/harness/*.js")
        includeEmptyDirs = false
      }
      into(test262Staging)
    }
    // Rename the unzipped dir as `test262-main` so the path is known to Java.
    copy {
      from("${test262Staging}/test262-${test262CommitHash}")
      into("${test262Destination}/test262-main")
    }
    delete "${test262Staging}"
  }
}

// TODO: Figure out how to deduplicate this file and intl/build.gradle
android {
  compileSdkVersion 24

  defaultConfig {
    minSdkVersion 16
    ndk {
      abiFilters (*rootProject.ext.abis)
    }
    testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    externalNativeBuild {
      cmake {
        arguments "-DHERMES_IS_ANDROID=True"
        arguments "-DHERMES_FACEBOOK_BUILD=${rootProject.ext.facebookBuild}"
        arguments "-DANDROID_STL=c++_shared"
        arguments "-DANDROID_PIE=True"
        arguments "-DIMPORT_HERMESC=${rootProject.ext.hermesC}"
        arguments "-DFBSOURCE_DIR=${rootProject.ext.fbsource}"
        arguments "-DHERMES_SLOW_DEBUG=False"
        arguments "-DHERMES_ENABLE_INTL=True"
        targets "jsijni", "jsijniepi", "libhermes"
      }
    }
    ndk {
      abiFilters (*rootProject.ext.abis)
    }
  }

  externalNativeBuild {
    cmake {
      version "3.10.2"
      path "../../CMakeLists.txt"
      buildStagingDirectory = "${rootProject.ext.hermes_ws}/staging/intl"
      buildStagingDirectory.mkdirs()
    }
  }

  useLibrary 'android.test.base'

  // Allow using prefab so that we can import libfbjni.so.
  buildFeatures {
    prefab true
  }

  dependencies {
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'org.easytesting:fest-assert-core:2.0M10'
    androidTestImplementation 'com.facebook.soloader:soloader:0.9.0'
    androidTestImplementation 'com.facebook.yoga:proguard-annotations:1.14.1'
  }

  dependencies {
    implementation 'com.facebook.fbjni:fbjni:0.2.2'
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.annotation:annotation-experimental:1.0.0"
  }

  // TODO: Revisit this if there is a better solution for deduplicating native
  // libraries.
  packagingOptions {
    pickFirst "**/libfbjni.so"
    pickFirst "**/libc++_shared.so"
  }

  sourceSets {
    main {
      java {
        srcDirs = []
      }
    }
    androidTest {
      java {
        srcDirs = [
          "java",
          // Include AndroidUnicodeUtils, which would normally come from RN
          "../../lib/Platform/Unicode/java",
          "../../lib/Platform/Intl/java",
        ]
      }
      resources {
        srcDir "java/com/facebook/hermes/test"
      }
    }
  }
}
