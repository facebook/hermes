/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// Auto-generated content below. Please do not modify manually.

// CHK-BCG3:Bytecode File Information:
// CHK-BCG3-NEXT:  Bytecode version number: 94
// CHK-BCG3-NEXT:  Source hash: {{.*}}
// CHK-BCG3-NEXT:  Function count: 18
// CHK-BCG3-NEXT:  String count: 19
// CHK-BCG3-NEXT:  BigInt count: 0
// CHK-BCG3-NEXT:  String Kind Entry count: 2
// CHK-BCG3-NEXT:  RegExp count: 0
// CHK-BCG3-NEXT:  Segment ID: 0
// CHK-BCG3-NEXT:  CommonJS module count: 0
// CHK-BCG3-NEXT:  CommonJS module count (static): 0
// CHK-BCG3-NEXT:  Function source count: 0
// CHK-BCG3-NEXT:  Bytecode options:
// CHK-BCG3-NEXT:    staticBuiltins: 0
// CHK-BCG3-NEXT:    cjsModulesStaticallyResolved: 0

// CHK-BCG3:Global String Table:
// CHK-BCG3-NEXT:s0[ASCII, 0..-1]:
// CHK-BCG3-NEXT:s1[ASCII, 0..0]: :
// CHK-BCG3-NEXT:s2[ASCII, 9..14]: errors
// CHK-BCG3-NEXT:s3[ASCII, 15..20]: global
// CHK-BCG3-NEXT:s4[ASCII, 28..30]: str
// CHK-BCG3-NEXT:s5[UTF-16, 218..301]: \x0A\x00\x0A\x00\x63\x00\xE0\x00\x6C\x00\x6C\x00\x0A\x00\x20\x00\x20\x00\x54\x00\x20\x00\x20\x00\x20\x00\x20\x00\x20\x00\xF4\x00\x20\x00\x20\x00\x20\x00\x20\x00\x20\x00\xDC\x00\x0A\x00\x0A\x00\x20\x00\x6E\x00\x20\x00\x64\x00\x20\x00\x65\x00\x20\x00\x66\x00\x20\x00\x69\x00\x20\x00\x6E\x00\x20\x00\xE8\x00\x20\x00\x64\x00\x0A\x00\x0A\x00
// CHK-BCG3-NEXT:i6[ASCII, 1..4] #E7ECD7B6: name
// CHK-BCG3-NEXT:i7[ASCII, 3..9] #63D87C1C: message
// CHK-BCG3-NEXT:i8[ASCII, 19..19] #00018270: a
// CHK-BCG3-NEXT:i9[ASCII, 21..26] #CB8DFA65: concat
// CHK-BCG3-NEXT:i10[ASCII, 26..29] #1100B6AC: test
// CHK-BCG3-NEXT:i11[ASCII, 31..44] #85BBF6F9: HermesInternal
// CHK-BCG3-NEXT:i12[ASCII, 45..106] #ABFBB1BC: a0000000111111111122222222223333333333444444444455555555556666
// CHK-BCG3-NEXT:i13[ASCII, 107..209] #89B63FF5: a00000001111111111222222222233ThisShouldNotShowUpAtInTheTextifiedCallee33333333444444444455555555556666
// CHK-BCG3-NEXT:i14[ASCII, 210..210] #00018E43: b
// CHK-BCG3-NEXT:i15[ASCII, 211..215] #A689F65B: print
// CHK-BCG3-NEXT:i16[ASCII, 216..216] #0001EFDB: z
// CHK-BCG3-NEXT:i17[UTF-16, 302..425] #3CFBC16D: \xE0\x00\xE0\x00\xE0\x00\xE0\x00\xE0\x00\xE0\x00\xE0\x00\xE0\x00\xE8\x00\xE8\x00\xE8\x00\xE8\x00\xE8\x00\xE8\x00\xE8\x00\xE8\x00\xE8\x00\xE8\x00\xEC\x00\xEC\x00\xEC\x00\xEC\x00\xEC\x00\xEC\x00\xEC\x00\xEC\x00\xEC\x00\xEC\x00\xF2\x00\xF2\x00\xF2\x00\xF2\x00\xF2\x00\xF2\x00\xF2\x00\xF2\x00\xF2\x00\xF2\x00\xF9\x00\xF9\x00\xF9\x00\xF9\x00\xF9\x00\xF9\x00\xF9\x00\xF9\x00\xF9\x00\xF9\x00\xE2\x00\xE2\x00\xE2\x00\xE2\x00\xE2\x00\xE2\x00\xE2\x00\xE2\x00\xE2\x00\xE2\x00\xEA\x00\xEA\x00\xEA\x00\xEA\x00
// CHK-BCG3-NEXT:i18[UTF-16, 426..635] #71F2758E: \xE0\x00\xE0\x00\xE0\x00\xE0\x00\xE0\x00\xE0\x00\xE0\x00\xE0\x00\xE8\x00\xE8\x00\xE8\x00\xE8\x00\xE8\x00\xE8\x00\xE8\x00\xE8\x00\xE8\x00\xE8\x00\xEC\x00\xEC\x00\xEC\x00\xEC\x00\xEC\x00\xEC\x00\xEC\x00\xEC\x00\xEC\x00\xEC\x00\xF2\x00\xF2\x00\xFC\x00\x54\x00\x68\x00\x69\x00\x73\x00\x53\x00\x68\x00\x6F\x00\x75\x00\x6C\x00\x64\x00\x4E\x00\x6F\x00\x74\x00\x53\x00\x68\x00\x6F\x00\x77\x00\x55\x00\x70\x00\x41\x00\x74\x00\x49\x00\x6E\x00\x54\x00\x68\x00\xE8\x00\x54\x00\x65\x00\x78\x00\x74\x00\x69\x00\x66\x00\x69\x00\x65\x00\x64\x00\x43\x00\x61\x00\x6C\x00\x6C\x00\x65\x00\x65\x00\xFC\x00\xF2\x00\xF2\x00\xF2\x00\xF2\x00\xF2\x00\xF2\x00\xF2\x00\xF2\x00\xF9\x00\xF9\x00\xF9\x00\xF9\x00\xF9\x00\xF9\x00\xF9\x00\xF9\x00\xF9\x00\xF9\x00\xE2\x00\xE2\x00\xE2\x00\xE2\x00\xE2\x00\xE2\x00\xE2\x00\xE2\x00\xE2\x00\xE2\x00\xEA\x00\xEA\x00\xEA\x00\xEA\x00

// CHK-BCG3:Array Buffer:
// CHK-BCG3-NEXT:Function<global>(1 params, 13 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x0000, scope 0x0000, textified callees 0x0001
// CHK-BCG3-NEXT:    DeclareGlobalVar  "a"
// CHK-BCG3-NEXT:    DeclareGlobalVar  "test"
// CHK-BCG3-NEXT:    CreateEnvironment r0
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, Function<test>
// CHK-BCG3-NEXT:    GetGlobalObject   r1
// CHK-BCG3-NEXT:    PutById           r1, r2, 1, "test"
// CHK-BCG3-NEXT:    TryGetById        r4, r1, 1, "print"
// CHK-BCG3-NEXT:    LoadConstUndefined r3
// CHK-BCG3-NEXT:    LoadConstString   r2, "errors"
// CHK-BCG3-NEXT:    Call2             r2, r4, r3, r2
// CHK-BCG3-NEXT:    NewObject         r2
// CHK-BCG3-NEXT:    CreateClosure     r4, r0, NCFunction<b>
// CHK-BCG3-NEXT:    PutNewOwnByIdShort r2, r4, "b"
// CHK-BCG3-NEXT:    PutById           r1, r2, 2, "a"
// CHK-BCG3-NEXT:    GetByIdShort      r4, r1, 2, "test"
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, NCFunction<>
// CHK-BCG3-NEXT:    Call2             r2, r4, r3, r2
// CHK-BCG3-NEXT:    GetByIdShort      r4, r1, 2, "test"
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, NCFunction<>
// CHK-BCG3-NEXT:    Call2             r2, r4, r3, r2
// CHK-BCG3-NEXT:    GetByIdShort      r4, r1, 2, "test"
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, NCFunction<>
// CHK-BCG3-NEXT:    Call2             r2, r4, r3, r2
// CHK-BCG3-NEXT:    GetByIdShort      r4, r1, 2, "test"
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, NCFunction<>
// CHK-BCG3-NEXT:    Call2             r2, r4, r3, r2
// CHK-BCG3-NEXT:    GetByIdShort      r4, r1, 2, "test"
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, NCFunction<>
// CHK-BCG3-NEXT:    Call2             r2, r4, r3, r2
// CHK-BCG3-NEXT:    GetByIdShort      r4, r1, 2, "test"
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, NCFunction<>
// CHK-BCG3-NEXT:    Call2             r2, r4, r3, r2
// CHK-BCG3-NEXT:    GetByIdShort      r4, r1, 2, "test"
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, NCFunction<>
// CHK-BCG3-NEXT:    Call2             r2, r4, r3, r2
// CHK-BCG3-NEXT:    GetByIdShort      r4, r1, 2, "test"
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, NCFunction<>
// CHK-BCG3-NEXT:    Call2             r2, r4, r3, r2
// CHK-BCG3-NEXT:    GetByIdShort      r4, r1, 2, "test"
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, NCFunction<>
// CHK-BCG3-NEXT:    Call2             r2, r4, r3, r2
// CHK-BCG3-NEXT:    GetByIdShort      r4, r1, 2, "test"
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, NCFunction<>
// CHK-BCG3-NEXT:    Call2             r2, r4, r3, r2
// CHK-BCG3-NEXT:    GetByIdShort      r4, r1, 2, "test"
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, NCFunction<>
// CHK-BCG3-NEXT:    Call2             r2, r4, r3, r2
// CHK-BCG3-NEXT:    GetByIdShort      r4, r1, 2, "test"
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, NCFunction<>
// CHK-BCG3-NEXT:    Call2             r2, r4, r3, r2
// CHK-BCG3-NEXT:    GetByIdShort      r4, r1, 2, "test"
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, NCFunction<>
// CHK-BCG3-NEXT:    Call2             r2, r4, r3, r2
// CHK-BCG3-NEXT:    GetByIdShort      r2, r1, 2, "test"
// CHK-BCG3-NEXT:    CreateClosure     r1, r0, NCFunction<>
// CHK-BCG3-NEXT:    Call2             r1, r2, r3, r1
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r1

// CHK-BCG3:Function<test>(2 params, 15 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x0114, scope 0x0003, textified callees 0x002e
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:L4:
// CHK-BCG3-NEXT:    LoadParam         r1, 1
// CHK-BCG3-NEXT:    LoadConstUndefined r0
// CHK-BCG3-NEXT:    Call1             r0, r1, r0
// CHK-BCG3-NEXT:L5:
// CHK-BCG3-NEXT:    Jmp               L2
// CHK-BCG3-NEXT:L1:
// CHK-BCG3-NEXT:    Catch             r0
// CHK-BCG3-NEXT:    GetGlobalObject   r1
// CHK-BCG3-NEXT:    TryGetById        r3, r1, 1, "print"
// CHK-BCG3-NEXT:    GetByIdShort      r5, r0, 2, "name"
// CHK-BCG3-NEXT:    TryGetById        r1, r1, 3, "HermesInternal"
// CHK-BCG3-NEXT:    GetByIdShort      r4, r1, 4, "concat"
// CHK-BCG3-NEXT:    LoadConstString   r2, ""
// CHK-BCG3-NEXT:    LoadConstString   r1, ":"
// CHK-BCG3-NEXT:    Call3             r2, r4, r2, r5, r1
// CHK-BCG3-NEXT:    GetByIdShort      r1, r0, 5, "message"
// CHK-BCG3-NEXT:    LoadConstUndefined r0
// CHK-BCG3-NEXT:    Call3             r0, r3, r0, r2, r1
// CHK-BCG3-NEXT:L2:
// CHK-BCG3-NEXT:    LoadConstUndefined r0
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:Exception Handlers:
// CHK-BCG3-NEXT:0: start = L4, end = L5, target = L1

// CHK-BCG3:NCFunction<b>(1 params, 3 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x0190, scope 0x0006, textified callees 0x0000
// CHK-BCG3-NEXT:    NewArray          r1, 1
// CHK-BCG3-NEXT:    CreateEnvironment r0
// CHK-BCG3-NEXT:    CreateClosure     r2, r0, NCFunction<>
// CHK-BCG3-NEXT:    PutOwnByIndex     r1, r2, 0
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r1

// CHK-BCG3:NCFunction<>(1 params, 1 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x01a9, scope 0x0009, textified callees 0x0000
// CHK-BCG3-NEXT:    LoadConstFalse    r0
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:NCFunction<>(1 params, 9 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x01b7, scope 0x000c, textified callees 0x0033
// CHK-BCG3-NEXT:    GetGlobalObject   r0
// CHK-BCG3-NEXT:    GetByIdShort      r1, r0, 1, "a"
// CHK-BCG3-NEXT:    LoadConstUndefined r0
// CHK-BCG3-NEXT:    Call1             r0, r1, r0
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:NCFunction<>(1 params, 9 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x01d7, scope 0x000f, textified callees 0x0036
// CHK-BCG3-NEXT:    GetGlobalObject   r0
// CHK-BCG3-NEXT:    GetByIdShort      r1, r0, 1, "a"
// CHK-BCG3-NEXT:    GetByIdShort      r0, r1, 2, "z"
// CHK-BCG3-NEXT:    Call1             r0, r0, r1
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:NCFunction<>(1 params, 9 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x0201, scope 0x0012, textified callees 0x0039
// CHK-BCG3-NEXT:    LoadConstNull     r1
// CHK-BCG3-NEXT:    LoadConstUndefined r0
// CHK-BCG3-NEXT:    Call1             r0, r1, r0
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:NCFunction<>(1 params, 9 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x0219, scope 0x0015, textified callees 0x003c
// CHK-BCG3-NEXT:    LoadConstTrue     r1
// CHK-BCG3-NEXT:    LoadConstUndefined r0
// CHK-BCG3-NEXT:    Call1             r0, r1, r0
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:NCFunction<>(1 params, 9 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x0231, scope 0x0018, textified callees 0x003f
// CHK-BCG3-NEXT:    LoadConstFalse    r1
// CHK-BCG3-NEXT:    LoadConstUndefined r0
// CHK-BCG3-NEXT:    Call1             r0, r1, r0
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:NCFunction<>(1 params, 9 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x0249, scope 0x001b, textified callees 0x0042
// CHK-BCG3-NEXT:    LoadConstString   r1, "str"
// CHK-BCG3-NEXT:    LoadConstUndefined r0
// CHK-BCG3-NEXT:    Call1             r0, r1, r0
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:NCFunction<>(1 params, 9 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x0261, scope 0x001e, textified callees 0x0045
// CHK-BCG3-NEXT:    LoadConstUInt8    r1, 1
// CHK-BCG3-NEXT:    LoadConstUndefined r0
// CHK-BCG3-NEXT:    Call1             r0, r1, r0
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:NCFunction<>(1 params, 9 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x0279, scope 0x0021, textified callees 0x0048
// CHK-BCG3-NEXT:    LoadConstDouble   r1, 3.14
// CHK-BCG3-NEXT:    LoadConstUndefined r0
// CHK-BCG3-NEXT:    Call1             r0, r1, r0
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:NCFunction<>(1 params, 9 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x0291, scope 0x0024, textified callees 0x004b
// CHK-BCG3-NEXT:    GetGlobalObject   r0
// CHK-BCG3-NEXT:    GetByIdShort      r1, r0, 1, "a"
// CHK-BCG3-NEXT:    GetByIdShort      r0, r1, 2, "b"
// CHK-BCG3-NEXT:    Call1             r1, r0, r1
// CHK-BCG3-NEXT:    LoadConstZero     r0
// CHK-BCG3-NEXT:    GetByVal          r0, r1, r0
// CHK-BCG3-NEXT:    Call1             r1, r0, r1
// CHK-BCG3-NEXT:    LoadConstUndefined r0
// CHK-BCG3-NEXT:    Call1             r0, r1, r0
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:NCFunction<>(1 params, 9 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x02d6, scope 0x0027, textified callees 0x0052
// CHK-BCG3-NEXT:    GetGlobalObject   r0
// CHK-BCG3-NEXT:    GetByIdShort      r1, r0, 1, "a"
// CHK-BCG3-NEXT:    GetByIdShort      r0, r1, 2, "a0000000111111111"...
// CHK-BCG3-NEXT:    Call1             r0, r0, r1
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:NCFunction<>(1 params, 9 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x0301, scope 0x002a, textified callees 0x0056
// CHK-BCG3-NEXT:    GetGlobalObject   r0
// CHK-BCG3-NEXT:    GetByIdShort      r1, r0, 1, "a"
// CHK-BCG3-NEXT:    GetByIdShort      r0, r1, 2, "a0000000111111111"...
// CHK-BCG3-NEXT:    Call1             r0, r0, r1
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:NCFunction<>(1 params, 9 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x032c, scope 0x002d, textified callees 0x005a
// CHK-BCG3-NEXT:    LoadConstString   r1, "\x0a\x0ac\u00e0ll"...
// CHK-BCG3-NEXT:    LoadConstUndefined r0
// CHK-BCG3-NEXT:    Call1             r0, r1, r0
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:NCFunction<>(1 params, 9 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x0344, scope 0x0030, textified callees 0x005e
// CHK-BCG3-NEXT:    GetGlobalObject   r0
// CHK-BCG3-NEXT:    GetByIdShort      r1, r0, 1, "a"
// CHK-BCG3-NEXT:    GetByIdShort      r0, r1, 2, "\u00e0\u00e0\u00e0"...
// CHK-BCG3-NEXT:    Call1             r0, r0, r1
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:NCFunction<>(1 params, 9 registers, 0 symbols):
// CHK-BCG3-NEXT:Offset in debug table: source 0x036f, scope 0x0033, textified callees 0x0062
// CHK-BCG3-NEXT:    GetGlobalObject   r0
// CHK-BCG3-NEXT:    GetByIdShort      r1, r0, 1, "a"
// CHK-BCG3-NEXT:    GetByIdShort      r0, r1, 2, "\u00e0\u00e0\u00e0"...
// CHK-BCG3-NEXT:    Call1             r0, r0, r1
// CHK-BCG3-NEXT:    AsyncBreakCheck
// CHK-BCG3-NEXT:    Ret               r0

// CHK-BCG3:Debug filename table:
// CHK-BCG3-NEXT:  0: {{.*}}not-a-function.js

// CHK-BCG3:Debug file table:
// CHK-BCG3-NEXT:  source table offset 0x0000: filename id 0

// CHK-BCG3:Debug source table:
// CHK-BCG3-NEXT:  0x0000  function idx 0, starts at line 42 col 1
// CHK-BCG3-NEXT:    bc 12: line 42 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 19: line 42 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 25: line 44 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 37: line 44 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 42: line 47 col 9 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 44: line 48 col 9 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 49: line 47 col 9 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 53: line 47 col 7 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 59: line 60 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 64: line 60 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 69: line 60 col 5 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 74: line 64 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 79: line 64 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 84: line 64 col 5 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 89: line 68 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 94: line 68 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 99: line 68 col 5 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 104: line 72 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 109: line 72 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 114: line 72 col 5 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 119: line 76 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 124: line 76 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 129: line 76 col 5 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 134: line 80 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 139: line 80 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 144: line 80 col 5 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 149: line 84 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 154: line 84 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 159: line 84 col 5 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 164: line 88 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 169: line 88 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 174: line 88 col 5 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 179: line 92 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 184: line 92 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 189: line 92 col 5 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 194: line 96 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 199: line 96 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 204: line 96 col 5 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 209: line 100 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 214: line 100 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 219: line 100 col 5 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 224: line 104 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 229: line 104 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 234: line 104 col 5 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 239: line 129 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 244: line 129 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 249: line 129 col 5 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 254: line 133 col 1 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 259: line 133 col 6 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 264: line 133 col 5 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:    bc 270: line 133 col 187 scope offset 0x0000 env r0
// CHK-BCG3-NEXT:  0x0114  function idx 1, starts at line 51 col 1
// CHK-BCG3-NEXT:    bc 1: line 52 col 5 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 6: line 54 col 10 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 10: line 55 col 5 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 12: line 55 col 7 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 16: line 56 col 9 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 22: line 56 col 19 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 27: line 56 col 15 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 33: line 56 col 15 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 46: line 56 col 15 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 52: line 56 col 30 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 59: line 56 col 14 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 65: line 57 col 5 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 67: line 58 col 1 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x0190  function idx 2, starts at line 48 col 9
// CHK-BCG3-NEXT:    bc 0: line 48 col 15 scope offset 0x0006 env r0
// CHK-BCG3-NEXT:    bc 6: line 48 col 16 scope offset 0x0006 env r0
// CHK-BCG3-NEXT:    bc 11: line 48 col 15 scope offset 0x0006 env r0
// CHK-BCG3-NEXT:    bc 16: line 48 col 15 scope offset 0x0006 env r0
// CHK-BCG3-NEXT:  0x01a9  function idx 3, starts at line 48 col 16
// CHK-BCG3-NEXT:    bc 3: line 48 col 22 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x01b7  function idx 4, starts at line 60 col 6
// CHK-BCG3-NEXT:    bc 2: line 60 col 12 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 9: line 60 col 13 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 14: line 60 col 13 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x01d7  function idx 5, starts at line 64 col 6
// CHK-BCG3-NEXT:    bc 2: line 64 col 12 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 7: line 64 col 15 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 12: line 64 col 15 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 17: line 64 col 15 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x0201  function idx 6, starts at line 68 col 6
// CHK-BCG3-NEXT:    bc 4: line 68 col 16 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 9: line 68 col 16 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x0219  function idx 7, starts at line 72 col 6
// CHK-BCG3-NEXT:    bc 4: line 72 col 16 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 9: line 72 col 16 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x0231  function idx 8, starts at line 76 col 6
// CHK-BCG3-NEXT:    bc 4: line 76 col 17 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 9: line 76 col 17 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x0249  function idx 9, starts at line 80 col 6
// CHK-BCG3-NEXT:    bc 6: line 80 col 17 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 11: line 80 col 17 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x0261  function idx 10, starts at line 84 col 6
// CHK-BCG3-NEXT:    bc 5: line 84 col 13 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 10: line 84 col 13 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x0279  function idx 11, starts at line 88 col 6
// CHK-BCG3-NEXT:    bc 12: line 88 col 18 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 17: line 88 col 18 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x0291  function idx 12, starts at line 92 col 6
// CHK-BCG3-NEXT:    bc 2: line 92 col 12 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 7: line 92 col 15 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 12: line 92 col 15 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 18: line 92 col 20 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 22: line 92 col 20 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 28: line 92 col 22 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 33: line 92 col 22 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x02d6  function idx 13, starts at line 96 col 6
// CHK-BCG3-NEXT:    bc 2: line 96 col 12 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 7: line 96 col 76 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 12: line 96 col 76 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 17: line 96 col 76 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x0301  function idx 14, starts at line 100 col 6
// CHK-BCG3-NEXT:    bc 2: line 100 col 12 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 7: line 100 col 117 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 12: line 100 col 117 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 17: line 100 col 117 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x032c  function idx 15, starts at line 104 col 6
// CHK-BCG3-NEXT:    bc 6: line 111 col 2 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 11: line 111 col 2 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x0344  function idx 16, starts at line 129 col 6
// CHK-BCG3-NEXT:    bc 2: line 129 col 12 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 7: line 129 col 138 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 12: line 129 col 138 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 17: line 129 col 138 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x036f  function idx 17, starts at line 133 col 6
// CHK-BCG3-NEXT:    bc 2: line 133 col 12 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 7: line 133 col 184 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 12: line 133 col 184 scope offset 0x0000 env none
// CHK-BCG3-NEXT:    bc 17: line 133 col 184 scope offset 0x0000 env none
// CHK-BCG3-NEXT:  0x039a  end of debug source table

// CHK-BCG3:Debug scope descriptor table:
// CHK-BCG3-NEXT:  0x0000  lexical parent:   none, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x0003  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x0006  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x0009  lexical parent: 0x0006, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x000c  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x000f  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x0012  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x0015  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x0018  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x001b  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x001e  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x0021  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x0024  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x0027  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x002a  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x002d  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x0030  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x0033  lexical parent: 0x0000, flags:   , variable count: 0
// CHK-BCG3-NEXT:  0x0036  end of debug scope descriptor table

// CHK-BCG3:Textified callees table:
// CHK-BCG3-NEXT:  0x0000  entries: 0
// CHK-BCG3-NEXT:  0x0001  entries: 15
// CHK-BCG3-NEXT:    bc 37 calls print
// CHK-BCG3-NEXT:    bc 69 calls test
// CHK-BCG3-NEXT:    bc 84 calls test
// CHK-BCG3-NEXT:    bc 99 calls test
// CHK-BCG3-NEXT:    bc 114 calls test
// CHK-BCG3-NEXT:    bc 129 calls test
// CHK-BCG3-NEXT:    bc 144 calls test
// CHK-BCG3-NEXT:    bc 159 calls test
// CHK-BCG3-NEXT:    bc 174 calls test
// CHK-BCG3-NEXT:    bc 189 calls test
// CHK-BCG3-NEXT:    bc 204 calls test
// CHK-BCG3-NEXT:    bc 219 calls test
// CHK-BCG3-NEXT:    bc 234 calls test
// CHK-BCG3-NEXT:    bc 249 calls test
// CHK-BCG3-NEXT:    bc 264 calls test
// CHK-BCG3-NEXT:  0x002e  entries: 2
// CHK-BCG3-NEXT:    bc 6 calls f
// CHK-BCG3-NEXT:    bc 59 calls print
// CHK-BCG3-NEXT:  0x0033  entries: 1
// CHK-BCG3-NEXT:    bc 9 calls a
// CHK-BCG3-NEXT:  0x0036  entries: 1
// CHK-BCG3-NEXT:    bc 12 calls a.z
// CHK-BCG3-NEXT:  0x0039  entries: 1
// CHK-BCG3-NEXT:    bc 4 calls null
// CHK-BCG3-NEXT:  0x003c  entries: 1
// CHK-BCG3-NEXT:    bc 4 calls true
// CHK-BCG3-NEXT:  0x003f  entries: 1
// CHK-BCG3-NEXT:    bc 4 calls false
// CHK-BCG3-NEXT:  0x0042  entries: 1
// CHK-BCG3-NEXT:    bc 6 calls \"str\"
// CHK-BCG3-NEXT:  0x0045  entries: 1
// CHK-BCG3-NEXT:    bc 5 calls 1
// CHK-BCG3-NEXT:  0x0048  entries: 1
// CHK-BCG3-NEXT:    bc 12 calls 3.14
// CHK-BCG3-NEXT:  0x004b  entries: 3
// CHK-BCG3-NEXT:    bc 12 calls a.b
// CHK-BCG3-NEXT:    bc 22 calls a.b()[0]
// CHK-BCG3-NEXT:    bc 28 calls a.b()[0]()
// CHK-BCG3-NEXT:  0x0052  entries: 1
// CHK-BCG3-NEXT:    bc 12 calls a.a0000000111111111122222222223333333333444444444455555555556666
// CHK-BCG3-NEXT:  0x0056  entries: 1
// CHK-BCG3-NEXT:    bc 12 calls a.a00000001111111111222222222233(...)33333333444444444455555555556666
// CHK-BCG3-NEXT:  0x005a  entries: 1
// CHK-BCG3-NEXT:    bc 6 calls `c\303\240llT     \303\264     \303\234n d e f i n \303\250 d`
// CHK-BCG3-NEXT:  0x005e  entries: 1
// CHK-BCG3-NEXT:    bc 12 calls a.\303\240\303\240\303\240\303\240\303\240\303\240\303\240\303\240\303\250\303\250\303\250\303\250\303\250\303\250\303\250\303\250\303\250\303\250\303\254\303\254\303\254\303\254\303\254\303\254\303\254\303\254\303\254\303\254\303\262\303\262\303\262\303\262\303\262\303\262\303\262\303\262\303\262\303\262\303\271\303\271\303\271\303\271\303\271\303\271\303\271\303\271\303\271\303\271\303\242\303\242\303\242\303\242\303\242\303\242\303\242\303\242\303\242\303\242\303\252\303\252\303\252\303\252
// CHK-BCG3-NEXT:  0x0062  entries: 1
// CHK-BCG3-NEXT:    bc 12 calls a
// CHK-BCG3-NEXT:  0x0066  end of textified callees table

// CHK-BCG3:Debug string table:
// CHK-BCG3-NEXT:  0x0000 print
// CHK-BCG3-NEXT:  0x0006 test
// CHK-BCG3-NEXT:  0x000b f
// CHK-BCG3-NEXT:  0x000d a
// CHK-BCG3-NEXT:  0x000f a.z
// CHK-BCG3-NEXT:  0x0013 null
// CHK-BCG3-NEXT:  0x0018 true
// CHK-BCG3-NEXT:  0x001d false
// CHK-BCG3-NEXT:  0x0023 \"str\"
// CHK-BCG3-NEXT:  0x0029 1
// CHK-BCG3-NEXT:  0x002b 3.14
// CHK-BCG3-NEXT:  0x0030 a.b
// CHK-BCG3-NEXT:  0x0034 a.b()[0]
// CHK-BCG3-NEXT:  0x003d a.b()[0]()
// CHK-BCG3-NEXT:  0x0048 a.a0000000111111111122222222223333333333444444444455555555556666
// CHK-BCG3-NEXT:  0x008a a.a00000001111111111222222222233(...)33333333444444444455555555556666
// CHK-BCG3-NEXT:  0x00d1 `c\303\240llT     \303\264     \303\234n d e f i n \303\250 d`
// CHK-BCG3-NEXT:  0x00f8 a.\303\240\303\240\303\240\303\240\303\240\303\240\303\240\303\240\303\250\303\250\303\250\303\250\303\250\303\250\303\250\303\250\303\250\303\250\303\254\303\254\303\254\303\254\303\254\303\254\303\254\303\254\303\254\303\254\303\262\303\262\303\262\303\262\303\262\303\262\303\262\303\262\303\262\303\262\303\271\303\271\303\271\303\271\303\271\303\271\303\271\303\271\303\271\303\271\303\242\303\242\303\242\303\242\303\242\303\242\303\242\303\242\303\242\303\242\303\252\303\252\303\252\303\252
// CHK-BCG3-NEXT:  0x0178 a
// CHK-BCG3-NEXT:  0x01fd  end of debug string table
