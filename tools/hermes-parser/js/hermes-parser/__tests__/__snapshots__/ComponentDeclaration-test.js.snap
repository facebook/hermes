// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ComponentDeclaration Basic Babel 1`] = `
{
  "body": [
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo",
        "type": "Identifier",
      },
      "params": [],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration Basic ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration Complex params Babel 1`] = `
{
  "body": [
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo",
        "type": "Identifier",
      },
      "params": [
        {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "name": "bar",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "baz",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": false,
              "type": "ObjectProperty",
              "value": {
                "name": "boo",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "extra": {
                  "raw": "'data-bav'",
                  "rawValue": "data-bav",
                },
                "type": "StringLiteral",
                "value": "data-bav",
              },
              "method": false,
              "shorthand": false,
              "type": "ObjectProperty",
              "value": {
                "name": "bav",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration Complex params ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "local": {
            "name": "bar",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "Bar",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "name": {
            "name": "bar",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
        {
          "local": {
            "name": "boo",
            "optional": true,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "Baz",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "name": {
            "name": "baz",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": false,
          "type": "ComponentParameter",
        },
        {
          "local": {
            "name": "bav",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "Bav",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "name": {
            "literalType": "string",
            "raw": "'data-bav'",
            "type": "Literal",
            "value": "data-bav",
          },
          "shorthand": false,
          "type": "ComponentParameter",
        },
      ],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration default params Babel 1`] = `
{
  "body": [
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo",
        "type": "Identifier",
      },
      "params": [
        {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "left": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "right": {
                  "extra": {
                    "raw": "''",
                    "rawValue": "",
                  },
                  "type": "StringLiteral",
                  "value": "",
                },
                "type": "AssignmentPattern",
              },
            },
          ],
          "type": "ObjectPattern",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration default params ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "local": {
            "left": {
              "name": "bar",
              "optional": true,
              "type": "Identifier",
              "typeAnnotation": {
                "type": "TypeAnnotation",
                "typeAnnotation": {
                  "id": {
                    "name": "Bar",
                    "optional": false,
                    "type": "Identifier",
                    "typeAnnotation": null,
                  },
                  "type": "GenericTypeAnnotation",
                  "typeParameters": null,
                },
              },
            },
            "right": {
              "literalType": "string",
              "raw": "''",
              "type": "Literal",
              "value": "",
            },
            "type": "AssignmentPattern",
          },
          "name": {
            "name": "bar",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
      ],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration normal and rest params Babel 1`] = `
{
  "body": [
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo",
        "type": "Identifier",
      },
      "params": [
        {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "param1",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "name": "param1",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "param2",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "name": "param2",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration normal and rest params ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "local": {
            "name": "param1",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "StringTypeAnnotation",
              },
            },
          },
          "name": {
            "name": "param1",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
        {
          "argument": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "param2",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "param2",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
              },
            ],
            "type": "ObjectPattern",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "Props",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "type": "RestElement",
        },
      ],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration normal and rest params with nested rest Babel 1`] = `
{
  "body": [
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo",
        "type": "Identifier",
      },
      "params": [
        {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "param1",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "name": "param1",
                "type": "Identifier",
              },
            },
            {
              "computed": false,
              "key": {
                "name": "param2",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "name": "param2",
                "type": "Identifier",
              },
            },
            {
              "argument": {
                "name": "otherParams",
                "type": "Identifier",
              },
              "type": "RestElement",
              "typeAnnotation": null,
            },
          ],
          "type": "ObjectPattern",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration normal and rest params with nested rest ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "local": {
            "name": "param1",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "StringTypeAnnotation",
              },
            },
          },
          "name": {
            "name": "param1",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
        {
          "argument": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "param2",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "param2",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
              },
              {
                "argument": {
                  "name": "otherParams",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "RestElement",
              },
            ],
            "type": "ObjectPattern",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "Props",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "type": "RestElement",
        },
      ],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref and normal params Babel 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "Foo",
            "type": "Identifier",
          },
          "init": {
            "arguments": [
              {
                "name": "Foo_withRef",
                "type": "Identifier",
              },
            ],
            "callee": {
              "computed": false,
              "object": {
                "name": "React",
                "type": "Identifier",
              },
              "property": {
                "name": "forwardRef",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "CallExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "type": "VariableDeclaration",
    },
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo_withRef",
        "type": "Identifier",
      },
      "params": [
        {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "name": "foo",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
        {
          "name": "ref",
          "type": "Identifier",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "Ref",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": null,
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref and normal params ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "local": {
            "name": "foo",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "StringTypeAnnotation",
              },
            },
          },
          "name": {
            "name": "foo",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
        {
          "local": {
            "name": "ref",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "Ref",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "name": {
            "name": "ref",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
      ],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref and normal params default exported Babel 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "Foo",
            "type": "Identifier",
          },
          "init": {
            "arguments": [
              {
                "name": "Foo_withRef",
                "type": "Identifier",
              },
            ],
            "callee": {
              "computed": false,
              "object": {
                "name": "React",
                "type": "Identifier",
              },
              "property": {
                "name": "forwardRef",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "CallExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "type": "VariableDeclaration",
    },
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo_withRef",
        "type": "Identifier",
      },
      "params": [
        {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "name": "foo",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
        {
          "name": "ref",
          "type": "Identifier",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "Ref",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": null,
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
    {
      "declaration": {
        "name": "Foo",
        "type": "Identifier",
      },
      "type": "ExportDefaultDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref and normal params default exported ESTree 1`] = `
{
  "body": [
    {
      "declaration": {
        "body": {
          "body": [],
          "type": "BlockStatement",
        },
        "id": {
          "name": "Foo",
          "optional": false,
          "type": "Identifier",
          "typeAnnotation": null,
        },
        "params": [
          {
            "local": {
              "name": "foo",
              "optional": false,
              "type": "Identifier",
              "typeAnnotation": {
                "type": "TypeAnnotation",
                "typeAnnotation": {
                  "type": "StringTypeAnnotation",
                },
              },
            },
            "name": {
              "name": "foo",
              "optional": false,
              "type": "Identifier",
              "typeAnnotation": null,
            },
            "shorthand": true,
            "type": "ComponentParameter",
          },
          {
            "local": {
              "name": "ref",
              "optional": false,
              "type": "Identifier",
              "typeAnnotation": {
                "type": "TypeAnnotation",
                "typeAnnotation": {
                  "id": {
                    "name": "Ref",
                    "optional": false,
                    "type": "Identifier",
                    "typeAnnotation": null,
                  },
                  "type": "GenericTypeAnnotation",
                  "typeParameters": null,
                },
              },
            },
            "name": {
              "name": "ref",
              "optional": false,
              "type": "Identifier",
              "typeAnnotation": null,
            },
            "shorthand": true,
            "type": "ComponentParameter",
          },
        ],
        "rendersType": null,
        "type": "ComponentDeclaration",
        "typeParameters": null,
      },
      "type": "ExportDefaultDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref and normal params named exported Babel 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "Foo",
            "type": "Identifier",
          },
          "init": {
            "arguments": [
              {
                "name": "Foo_withRef",
                "type": "Identifier",
              },
            ],
            "callee": {
              "computed": false,
              "object": {
                "name": "React",
                "type": "Identifier",
              },
              "property": {
                "name": "forwardRef",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "CallExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "type": "VariableDeclaration",
    },
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo_withRef",
        "type": "Identifier",
      },
      "params": [
        {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "name": "foo",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
        {
          "name": "ref",
          "type": "Identifier",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "Ref",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": null,
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
    {
      "exportKind": "value",
      "source": null,
      "specifiers": [
        {
          "exported": {
            "name": "Foo",
            "type": "Identifier",
          },
          "local": {
            "name": "Foo",
            "type": "Identifier",
          },
          "type": "ExportSpecifier",
        },
      ],
      "type": "ExportNamedDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref and normal params named exported ESTree 1`] = `
{
  "body": [
    {
      "declaration": {
        "body": {
          "body": [],
          "type": "BlockStatement",
        },
        "id": {
          "name": "Foo",
          "optional": false,
          "type": "Identifier",
          "typeAnnotation": null,
        },
        "params": [
          {
            "local": {
              "name": "foo",
              "optional": false,
              "type": "Identifier",
              "typeAnnotation": {
                "type": "TypeAnnotation",
                "typeAnnotation": {
                  "type": "StringTypeAnnotation",
                },
              },
            },
            "name": {
              "name": "foo",
              "optional": false,
              "type": "Identifier",
              "typeAnnotation": null,
            },
            "shorthand": true,
            "type": "ComponentParameter",
          },
          {
            "local": {
              "name": "ref",
              "optional": false,
              "type": "Identifier",
              "typeAnnotation": {
                "type": "TypeAnnotation",
                "typeAnnotation": {
                  "id": {
                    "name": "Ref",
                    "optional": false,
                    "type": "Identifier",
                    "typeAnnotation": null,
                  },
                  "type": "GenericTypeAnnotation",
                  "typeParameters": null,
                },
              },
            },
            "name": {
              "name": "ref",
              "optional": false,
              "type": "Identifier",
              "typeAnnotation": null,
            },
            "shorthand": true,
            "type": "ComponentParameter",
          },
        ],
        "rendersType": null,
        "type": "ComponentDeclaration",
        "typeParameters": null,
      },
      "exportKind": "value",
      "source": null,
      "specifiers": [],
      "type": "ExportNamedDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref and normal params with hoisting (recursive) Babel 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "Foo",
            "type": "Identifier",
          },
          "init": {
            "arguments": [
              {
                "name": "Foo_withRef",
                "type": "Identifier",
              },
            ],
            "callee": {
              "computed": false,
              "object": {
                "name": "React",
                "type": "Identifier",
              },
              "property": {
                "name": "forwardRef",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "CallExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "type": "VariableDeclaration",
    },
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [
          {
            "argument": {
              "type": "NullLiteral",
            },
            "type": "ReturnStatement",
          },
        ],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo_withRef",
        "type": "Identifier",
      },
      "params": [
        {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "left": {
                  "name": "bar",
                  "type": "Identifier",
                },
                "right": {
                  "name": "Foo",
                  "type": "Identifier",
                },
                "type": "AssignmentPattern",
              },
            },
          ],
          "type": "ObjectPattern",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
        {
          "name": "ref",
          "type": "Identifier",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "type": "AnyTypeAnnotation",
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref and normal params with hoisting (recursive) ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [
          {
            "argument": {
              "literalType": "null",
              "raw": "null",
              "type": "Literal",
              "value": null,
            },
            "type": "ReturnStatement",
          },
        ],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "local": {
            "left": {
              "name": "bar",
              "optional": false,
              "type": "Identifier",
              "typeAnnotation": {
                "type": "TypeAnnotation",
                "typeAnnotation": {
                  "type": "MixedTypeAnnotation",
                },
              },
            },
            "right": {
              "name": "Foo",
              "optional": false,
              "type": "Identifier",
              "typeAnnotation": null,
            },
            "type": "AssignmentPattern",
          },
          "name": {
            "name": "bar",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
        {
          "local": {
            "name": "ref",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "AnyTypeAnnotation",
              },
            },
          },
          "name": {
            "name": "ref",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
      ],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref and normal params with hoisting Babel 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "Bar",
            "type": "Identifier",
          },
          "init": {
            "arguments": [
              {
                "name": "Bar_withRef",
                "type": "Identifier",
              },
            ],
            "callee": {
              "computed": false,
              "object": {
                "name": "React",
                "type": "Identifier",
              },
              "property": {
                "name": "forwardRef",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "CallExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "type": "VariableDeclaration",
    },
    {
      "expression": {
        "name": "Bar",
        "type": "Identifier",
      },
      "type": "ExpressionStatement",
    },
    {
      "expression": {
        "name": "unrelated",
        "type": "Identifier",
      },
      "type": "ExpressionStatement",
    },
    {
      "declarations": [
        {
          "id": {
            "name": "Foo",
            "type": "Identifier",
          },
          "init": {
            "arguments": [
              {
                "name": "Foo_withRef",
                "type": "Identifier",
              },
            ],
            "callee": {
              "computed": false,
              "object": {
                "name": "React",
                "type": "Identifier",
              },
              "property": {
                "name": "forwardRef",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "CallExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "type": "VariableDeclaration",
    },
    {
      "expression": {
        "arguments": [
          {
            "name": "Foo",
            "type": "Identifier",
          },
        ],
        "callee": {
          "name": "someSideEffect",
          "type": "Identifier",
        },
        "type": "CallExpression",
      },
      "type": "ExpressionStatement",
    },
    {
      "expression": {
        "name": "unrelated",
        "type": "Identifier",
      },
      "type": "ExpressionStatement",
    },
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo_withRef",
        "type": "Identifier",
      },
      "params": [
        {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "name": "foo",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
        {
          "name": "ref",
          "type": "Identifier",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "Ref",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": null,
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
    {
      "expression": {
        "name": "Bar",
        "type": "Identifier",
      },
      "type": "ExpressionStatement",
    },
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Bar_withRef",
        "type": "Identifier",
      },
      "params": [
        {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "foo",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "name": "foo",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
        {
          "name": "ref",
          "type": "Identifier",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "Ref",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": null,
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref and normal params with hoisting ESTree 1`] = `
{
  "body": [
    {
      "directive": null,
      "expression": {
        "name": "Bar",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "type": "ExpressionStatement",
    },
    {
      "directive": null,
      "expression": {
        "name": "unrelated",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "type": "ExpressionStatement",
    },
    {
      "directive": null,
      "expression": {
        "arguments": [
          {
            "name": "Foo",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
        ],
        "callee": {
          "name": "someSideEffect",
          "optional": false,
          "type": "Identifier",
          "typeAnnotation": null,
        },
        "optional": false,
        "type": "CallExpression",
        "typeArguments": null,
      },
      "type": "ExpressionStatement",
    },
    {
      "directive": null,
      "expression": {
        "name": "unrelated",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "type": "ExpressionStatement",
    },
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "local": {
            "name": "foo",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "StringTypeAnnotation",
              },
            },
          },
          "name": {
            "name": "foo",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
        {
          "local": {
            "name": "ref",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "Ref",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "name": {
            "name": "ref",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
      ],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
    {
      "directive": null,
      "expression": {
        "name": "Bar",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "type": "ExpressionStatement",
    },
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Bar",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "local": {
            "name": "foo",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "StringTypeAnnotation",
              },
            },
          },
          "name": {
            "name": "foo",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
        {
          "local": {
            "name": "ref",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "Ref",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "name": {
            "name": "ref",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
      ],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref and normal params within block Babel 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "declarations": [
              {
                "id": {
                  "name": "Foo",
                  "type": "Identifier",
                },
                "init": {
                  "arguments": [
                    {
                      "name": "Foo_withRef",
                      "type": "Identifier",
                    },
                  ],
                  "callee": {
                    "computed": false,
                    "object": {
                      "name": "React",
                      "type": "Identifier",
                    },
                    "property": {
                      "name": "forwardRef",
                      "type": "Identifier",
                    },
                    "type": "MemberExpression",
                  },
                  "type": "CallExpression",
                },
                "type": "VariableDeclarator",
              },
            ],
            "kind": "const",
            "type": "VariableDeclaration",
          },
          {
            "__componentDeclaration": true,
            "async": false,
            "body": {
              "body": [],
              "directives": [],
              "type": "BlockStatement",
            },
            "generator": false,
            "id": {
              "name": "Foo_withRef",
              "type": "Identifier",
            },
            "params": [
              {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "foo",
                      "type": "Identifier",
                    },
                    "method": false,
                    "shorthand": true,
                    "type": "ObjectProperty",
                    "value": {
                      "name": "foo",
                      "type": "Identifier",
                    },
                  },
                ],
                "type": "ObjectPattern",
                "typeAnnotation": {
                  "type": "TypeAnnotation",
                  "typeAnnotation": {
                    "id": {
                      "name": "$ReadOnly",
                      "type": "Identifier",
                    },
                    "type": "GenericTypeAnnotation",
                    "typeParameters": {
                      "params": [
                        {
                          "callProperties": [],
                          "exact": false,
                          "indexers": [],
                          "inexact": true,
                          "internalSlots": [],
                          "properties": [],
                          "type": "ObjectTypeAnnotation",
                        },
                      ],
                      "type": "TypeParameterInstantiation",
                    },
                  },
                },
              },
              {
                "name": "ref",
                "type": "Identifier",
                "typeAnnotation": {
                  "type": "TypeAnnotation",
                  "typeAnnotation": {
                    "id": {
                      "name": "Ref",
                      "type": "Identifier",
                    },
                    "type": "GenericTypeAnnotation",
                    "typeParameters": null,
                  },
                },
              },
            ],
            "returnType": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "id": {
                    "name": "Node",
                    "type": "Identifier",
                  },
                  "qualification": {
                    "name": "React",
                    "type": "Identifier",
                  },
                  "type": "QualifiedTypeIdentifier",
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
            "type": "FunctionDeclaration",
          },
          {
            "argument": {
              "name": "Foo",
              "type": "Identifier",
            },
            "type": "ReturnStatement",
          },
        ],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "A",
        "type": "Identifier",
      },
      "params": [],
      "type": "FunctionDeclaration",
    },
    {
      "alternate": null,
      "consequent": {
        "body": [
          {
            "declarations": [
              {
                "id": {
                  "name": "Foo",
                  "type": "Identifier",
                },
                "init": {
                  "arguments": [
                    {
                      "name": "Foo_withRef",
                      "type": "Identifier",
                    },
                  ],
                  "callee": {
                    "computed": false,
                    "object": {
                      "name": "React",
                      "type": "Identifier",
                    },
                    "property": {
                      "name": "forwardRef",
                      "type": "Identifier",
                    },
                    "type": "MemberExpression",
                  },
                  "type": "CallExpression",
                },
                "type": "VariableDeclarator",
              },
            ],
            "kind": "const",
            "type": "VariableDeclaration",
          },
          {
            "__componentDeclaration": true,
            "async": false,
            "body": {
              "body": [],
              "directives": [],
              "type": "BlockStatement",
            },
            "generator": false,
            "id": {
              "name": "Foo_withRef",
              "type": "Identifier",
            },
            "params": [
              {
                "properties": [
                  {
                    "computed": false,
                    "key": {
                      "name": "foo",
                      "type": "Identifier",
                    },
                    "method": false,
                    "shorthand": true,
                    "type": "ObjectProperty",
                    "value": {
                      "name": "foo",
                      "type": "Identifier",
                    },
                  },
                ],
                "type": "ObjectPattern",
                "typeAnnotation": {
                  "type": "TypeAnnotation",
                  "typeAnnotation": {
                    "id": {
                      "name": "$ReadOnly",
                      "type": "Identifier",
                    },
                    "type": "GenericTypeAnnotation",
                    "typeParameters": {
                      "params": [
                        {
                          "callProperties": [],
                          "exact": false,
                          "indexers": [],
                          "inexact": true,
                          "internalSlots": [],
                          "properties": [],
                          "type": "ObjectTypeAnnotation",
                        },
                      ],
                      "type": "TypeParameterInstantiation",
                    },
                  },
                },
              },
              {
                "name": "ref",
                "type": "Identifier",
                "typeAnnotation": {
                  "type": "TypeAnnotation",
                  "typeAnnotation": {
                    "id": {
                      "name": "Ref",
                      "type": "Identifier",
                    },
                    "type": "GenericTypeAnnotation",
                    "typeParameters": null,
                  },
                },
              },
            ],
            "returnType": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "id": {
                    "name": "Node",
                    "type": "Identifier",
                  },
                  "qualification": {
                    "name": "React",
                    "type": "Identifier",
                  },
                  "type": "QualifiedTypeIdentifier",
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
            "type": "FunctionDeclaration",
          },
          {
            "expression": {
              "arguments": [
                {
                  "name": "Foo",
                  "type": "Identifier",
                },
              ],
              "callee": {
                "name": "callSomething",
                "type": "Identifier",
              },
              "type": "CallExpression",
            },
            "type": "ExpressionStatement",
          },
        ],
        "directives": [],
        "type": "BlockStatement",
      },
      "test": {
        "type": "BooleanLiteral",
        "value": true,
      },
      "type": "IfStatement",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref and normal params within block ESTree 1`] = `
{
  "body": [
    {
      "async": false,
      "body": {
        "body": [
          {
            "body": {
              "body": [],
              "type": "BlockStatement",
            },
            "id": {
              "name": "Foo",
              "optional": false,
              "type": "Identifier",
              "typeAnnotation": null,
            },
            "params": [
              {
                "local": {
                  "name": "foo",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": {
                    "type": "TypeAnnotation",
                    "typeAnnotation": {
                      "type": "StringTypeAnnotation",
                    },
                  },
                },
                "name": {
                  "name": "foo",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "shorthand": true,
                "type": "ComponentParameter",
              },
              {
                "local": {
                  "name": "ref",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": {
                    "type": "TypeAnnotation",
                    "typeAnnotation": {
                      "id": {
                        "name": "Ref",
                        "optional": false,
                        "type": "Identifier",
                        "typeAnnotation": null,
                      },
                      "type": "GenericTypeAnnotation",
                      "typeParameters": null,
                    },
                  },
                },
                "name": {
                  "name": "ref",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "shorthand": true,
                "type": "ComponentParameter",
              },
            ],
            "rendersType": null,
            "type": "ComponentDeclaration",
            "typeParameters": null,
          },
          {
            "argument": {
              "name": "Foo",
              "optional": false,
              "type": "Identifier",
              "typeAnnotation": null,
            },
            "type": "ReturnStatement",
          },
        ],
        "type": "BlockStatement",
      },
      "expression": false,
      "generator": false,
      "id": {
        "name": "A",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [],
      "predicate": null,
      "returnType": null,
      "type": "FunctionDeclaration",
      "typeParameters": null,
    },
    {
      "alternate": null,
      "consequent": {
        "body": [
          {
            "body": {
              "body": [],
              "type": "BlockStatement",
            },
            "id": {
              "name": "Foo",
              "optional": false,
              "type": "Identifier",
              "typeAnnotation": null,
            },
            "params": [
              {
                "local": {
                  "name": "foo",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": {
                    "type": "TypeAnnotation",
                    "typeAnnotation": {
                      "type": "StringTypeAnnotation",
                    },
                  },
                },
                "name": {
                  "name": "foo",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "shorthand": true,
                "type": "ComponentParameter",
              },
              {
                "local": {
                  "name": "ref",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": {
                    "type": "TypeAnnotation",
                    "typeAnnotation": {
                      "id": {
                        "name": "Ref",
                        "optional": false,
                        "type": "Identifier",
                        "typeAnnotation": null,
                      },
                      "type": "GenericTypeAnnotation",
                      "typeParameters": null,
                    },
                  },
                },
                "name": {
                  "name": "ref",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "shorthand": true,
                "type": "ComponentParameter",
              },
            ],
            "rendersType": null,
            "type": "ComponentDeclaration",
            "typeParameters": null,
          },
          {
            "directive": null,
            "expression": {
              "arguments": [
                {
                  "name": "Foo",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
              ],
              "callee": {
                "name": "callSomething",
                "optional": false,
                "type": "Identifier",
                "typeAnnotation": null,
              },
              "optional": false,
              "type": "CallExpression",
              "typeArguments": null,
            },
            "type": "ExpressionStatement",
          },
        ],
        "type": "BlockStatement",
      },
      "test": {
        "literalType": "boolean",
        "raw": "true",
        "type": "Literal",
        "value": true,
      },
      "type": "IfStatement",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref and normal params within case Babel 1`] = `
{
  "body": [
    {
      "cases": [
        {
          "consequent": [
            {
              "declarations": [
                {
                  "id": {
                    "name": "Foo",
                    "type": "Identifier",
                  },
                  "init": {
                    "arguments": [
                      {
                        "name": "Foo_withRef",
                        "type": "Identifier",
                      },
                    ],
                    "callee": {
                      "computed": false,
                      "object": {
                        "name": "React",
                        "type": "Identifier",
                      },
                      "property": {
                        "name": "forwardRef",
                        "type": "Identifier",
                      },
                      "type": "MemberExpression",
                    },
                    "type": "CallExpression",
                  },
                  "type": "VariableDeclarator",
                },
              ],
              "kind": "const",
              "type": "VariableDeclaration",
            },
            {
              "__componentDeclaration": true,
              "async": false,
              "body": {
                "body": [],
                "directives": [],
                "type": "BlockStatement",
              },
              "generator": false,
              "id": {
                "name": "Foo_withRef",
                "type": "Identifier",
              },
              "params": [
                {
                  "properties": [
                    {
                      "computed": false,
                      "key": {
                        "name": "foo",
                        "type": "Identifier",
                      },
                      "method": false,
                      "shorthand": true,
                      "type": "ObjectProperty",
                      "value": {
                        "name": "foo",
                        "type": "Identifier",
                      },
                    },
                  ],
                  "type": "ObjectPattern",
                  "typeAnnotation": {
                    "type": "TypeAnnotation",
                    "typeAnnotation": {
                      "id": {
                        "name": "$ReadOnly",
                        "type": "Identifier",
                      },
                      "type": "GenericTypeAnnotation",
                      "typeParameters": {
                        "params": [
                          {
                            "callProperties": [],
                            "exact": false,
                            "indexers": [],
                            "inexact": true,
                            "internalSlots": [],
                            "properties": [],
                            "type": "ObjectTypeAnnotation",
                          },
                        ],
                        "type": "TypeParameterInstantiation",
                      },
                    },
                  },
                },
                {
                  "name": "ref",
                  "type": "Identifier",
                  "typeAnnotation": {
                    "type": "TypeAnnotation",
                    "typeAnnotation": {
                      "id": {
                        "name": "Ref",
                        "type": "Identifier",
                      },
                      "type": "GenericTypeAnnotation",
                      "typeParameters": null,
                    },
                  },
                },
              ],
              "returnType": {
                "type": "TypeAnnotation",
                "typeAnnotation": {
                  "id": {
                    "id": {
                      "name": "Node",
                      "type": "Identifier",
                    },
                    "qualification": {
                      "name": "React",
                      "type": "Identifier",
                    },
                    "type": "QualifiedTypeIdentifier",
                  },
                  "type": "GenericTypeAnnotation",
                  "typeParameters": null,
                },
              },
              "type": "FunctionDeclaration",
            },
            {
              "expression": {
                "arguments": [
                  {
                    "name": "Foo",
                    "type": "Identifier",
                  },
                ],
                "callee": {
                  "name": "callSomething",
                  "type": "Identifier",
                },
                "type": "CallExpression",
              },
              "type": "ExpressionStatement",
            },
          ],
          "test": {
            "extra": {
              "raw": "1",
              "rawValue": 1,
            },
            "type": "NumericLiteral",
            "value": 1,
          },
          "type": "SwitchCase",
        },
      ],
      "discriminant": {
        "name": "thing",
        "type": "Identifier",
      },
      "type": "SwitchStatement",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref and normal params within case ESTree 1`] = `
{
  "body": [
    {
      "cases": [
        {
          "consequent": [
            {
              "body": {
                "body": [],
                "type": "BlockStatement",
              },
              "id": {
                "name": "Foo",
                "optional": false,
                "type": "Identifier",
                "typeAnnotation": null,
              },
              "params": [
                {
                  "local": {
                    "name": "foo",
                    "optional": false,
                    "type": "Identifier",
                    "typeAnnotation": {
                      "type": "TypeAnnotation",
                      "typeAnnotation": {
                        "type": "StringTypeAnnotation",
                      },
                    },
                  },
                  "name": {
                    "name": "foo",
                    "optional": false,
                    "type": "Identifier",
                    "typeAnnotation": null,
                  },
                  "shorthand": true,
                  "type": "ComponentParameter",
                },
                {
                  "local": {
                    "name": "ref",
                    "optional": false,
                    "type": "Identifier",
                    "typeAnnotation": {
                      "type": "TypeAnnotation",
                      "typeAnnotation": {
                        "id": {
                          "name": "Ref",
                          "optional": false,
                          "type": "Identifier",
                          "typeAnnotation": null,
                        },
                        "type": "GenericTypeAnnotation",
                        "typeParameters": null,
                      },
                    },
                  },
                  "name": {
                    "name": "ref",
                    "optional": false,
                    "type": "Identifier",
                    "typeAnnotation": null,
                  },
                  "shorthand": true,
                  "type": "ComponentParameter",
                },
              ],
              "rendersType": null,
              "type": "ComponentDeclaration",
              "typeParameters": null,
            },
            {
              "directive": null,
              "expression": {
                "arguments": [
                  {
                    "name": "Foo",
                    "optional": false,
                    "type": "Identifier",
                    "typeAnnotation": null,
                  },
                ],
                "callee": {
                  "name": "callSomething",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "optional": false,
                "type": "CallExpression",
                "typeArguments": null,
              },
              "type": "ExpressionStatement",
            },
          ],
          "test": {
            "literalType": "numeric",
            "raw": "1",
            "type": "Literal",
            "value": 1,
          },
          "type": "SwitchCase",
        },
      ],
      "discriminant": {
        "name": "thing",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "type": "SwitchStatement",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref param Babel 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "Foo",
            "type": "Identifier",
          },
          "init": {
            "arguments": [
              {
                "name": "Foo_withRef",
                "type": "Identifier",
              },
            ],
            "callee": {
              "computed": false,
              "object": {
                "name": "React",
                "type": "Identifier",
              },
              "property": {
                "name": "forwardRef",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "CallExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "type": "VariableDeclaration",
    },
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo_withRef",
        "type": "Identifier",
      },
      "params": [
        {
          "name": "_$$empty_props_placeholder$$",
          "type": "Identifier",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
        {
          "name": "ref",
          "type": "Identifier",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "Ref",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": null,
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref param ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "local": {
            "name": "ref",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "Ref",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "name": {
            "name": "ref",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
      ],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref param renamed Babel 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "Foo",
            "type": "Identifier",
          },
          "init": {
            "arguments": [
              {
                "name": "Foo_withRef",
                "type": "Identifier",
              },
            ],
            "callee": {
              "computed": false,
              "object": {
                "name": "React",
                "type": "Identifier",
              },
              "property": {
                "name": "forwardRef",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "CallExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "type": "VariableDeclaration",
    },
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo_withRef",
        "type": "Identifier",
      },
      "params": [
        {
          "name": "_$$empty_props_placeholder$$",
          "type": "Identifier",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
        {
          "name": "internalRef",
          "type": "Identifier",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "Ref",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": null,
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref param renamed ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "local": {
            "name": "internalRef",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "Ref",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "name": {
            "name": "ref",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": false,
          "type": "ComponentParameter",
        },
      ],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref param renamed destructure Babel 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "Foo",
            "type": "Identifier",
          },
          "init": {
            "arguments": [
              {
                "name": "Foo_withRef",
                "type": "Identifier",
              },
            ],
            "callee": {
              "computed": false,
              "object": {
                "name": "React",
                "type": "Identifier",
              },
              "property": {
                "name": "forwardRef",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "CallExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "type": "VariableDeclaration",
    },
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo_withRef",
        "type": "Identifier",
      },
      "params": [
        {
          "name": "_$$empty_props_placeholder$$",
          "type": "Identifier",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
        {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "current",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "name": "current",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "Ref",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": null,
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref param renamed destructure ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "local": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "current",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "current",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
              },
            ],
            "type": "ObjectPattern",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "Ref",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "name": {
            "name": "ref",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": false,
          "type": "ComponentParameter",
        },
      ],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref param with default Babel 1`] = `
{
  "body": [
    {
      "declarations": [
        {
          "id": {
            "name": "Foo",
            "type": "Identifier",
          },
          "init": {
            "arguments": [
              {
                "name": "Foo_withRef",
                "type": "Identifier",
              },
            ],
            "callee": {
              "computed": false,
              "object": {
                "name": "React",
                "type": "Identifier",
              },
              "property": {
                "name": "forwardRef",
                "type": "Identifier",
              },
              "type": "MemberExpression",
            },
            "type": "CallExpression",
          },
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "type": "VariableDeclaration",
    },
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo_withRef",
        "type": "Identifier",
      },
      "params": [
        {
          "name": "_$$empty_props_placeholder$$",
          "type": "Identifier",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
        {
          "left": {
            "name": "ref",
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "Ref",
                  "type": "Identifier",
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "right": {
            "properties": [],
            "type": "ObjectExpression",
          },
          "type": "AssignmentPattern",
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration ref param with default ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "local": {
            "left": {
              "name": "ref",
              "optional": false,
              "type": "Identifier",
              "typeAnnotation": {
                "type": "TypeAnnotation",
                "typeAnnotation": {
                  "id": {
                    "name": "Ref",
                    "optional": false,
                    "type": "Identifier",
                    "typeAnnotation": null,
                  },
                  "type": "GenericTypeAnnotation",
                  "typeParameters": null,
                },
              },
            },
            "right": {
              "properties": [],
              "type": "ObjectExpression",
            },
            "type": "AssignmentPattern",
          },
          "name": {
            "name": "ref",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
      ],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration renders maybe type Babel 1`] = `
{
  "body": [
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo",
        "type": "Identifier",
      },
      "params": [],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration renders maybe type ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [],
      "rendersType": {
        "operator": "renders?",
        "type": "TypeOperator",
        "typeAnnotation": {
          "id": {
            "name": "SpecialType",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration renders star type Babel 1`] = `
{
  "body": [
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo",
        "type": "Identifier",
      },
      "params": [],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration renders star type ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [],
      "rendersType": {
        "operator": "renders*",
        "type": "TypeOperator",
        "typeAnnotation": {
          "id": {
            "name": "SpecialType",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration renders type (complex) Babel 1`] = `
{
  "body": [
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo",
        "type": "Identifier",
      },
      "params": [],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration renders type (complex) ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [],
      "rendersType": {
        "operator": "renders",
        "type": "TypeOperator",
        "typeAnnotation": {
          "type": "UnionTypeAnnotation",
          "types": [
            {
              "id": {
                "name": "SpecialType",
                "optional": false,
                "type": "Identifier",
                "typeAnnotation": null,
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": null,
            },
            {
              "id": {
                "name": "OtherSpecialType",
                "optional": false,
                "type": "Identifier",
                "typeAnnotation": null,
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": null,
            },
          ],
        },
      },
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration renders type Babel 1`] = `
{
  "body": [
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo",
        "type": "Identifier",
      },
      "params": [],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration renders type ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [],
      "rendersType": {
        "operator": "renders",
        "type": "TypeOperator",
        "typeAnnotation": {
          "id": {
            "name": "SpecialType",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration rest params Babel 1`] = `
{
  "body": [
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo",
        "type": "Identifier",
      },
      "params": [
        {
          "name": "props",
          "type": "Identifier",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo",
        "type": "Identifier",
      },
      "params": [
        {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "prop",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "name": "prop",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration rest params ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "argument": {
            "name": "props",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "Props",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "type": "RestElement",
        },
      ],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "argument": {
            "properties": [
              {
                "computed": false,
                "key": {
                  "name": "prop",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "kind": "init",
                "method": false,
                "shorthand": true,
                "type": "Property",
                "value": {
                  "name": "prop",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
              },
            ],
            "type": "ObjectPattern",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "Props",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "type": "RestElement",
        },
      ],
      "rendersType": null,
      "type": "ComponentDeclaration",
      "typeParameters": null,
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration type parameters Babel 1`] = `
{
  "body": [
    {
      "__componentDeclaration": true,
      "async": false,
      "body": {
        "body": [],
        "directives": [],
        "type": "BlockStatement",
      },
      "generator": false,
      "id": {
        "name": "Foo",
        "type": "Identifier",
      },
      "params": [
        {
          "properties": [
            {
              "computed": false,
              "key": {
                "name": "bar",
                "type": "Identifier",
              },
              "method": false,
              "shorthand": true,
              "type": "ObjectProperty",
              "value": {
                "name": "bar",
                "type": "Identifier",
              },
            },
          ],
          "type": "ObjectPattern",
          "typeAnnotation": {
            "type": "TypeAnnotation",
            "typeAnnotation": {
              "id": {
                "name": "$ReadOnly",
                "type": "Identifier",
              },
              "type": "GenericTypeAnnotation",
              "typeParameters": {
                "params": [
                  {
                    "callProperties": [],
                    "exact": false,
                    "indexers": [],
                    "inexact": true,
                    "internalSlots": [],
                    "properties": [],
                    "type": "ObjectTypeAnnotation",
                  },
                ],
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
      ],
      "returnType": {
        "type": "TypeAnnotation",
        "typeAnnotation": {
          "id": {
            "id": {
              "name": "Node",
              "type": "Identifier",
            },
            "qualification": {
              "name": "React",
              "type": "Identifier",
            },
            "type": "QualifiedTypeIdentifier",
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "FunctionDeclaration",
      "typeParameters": {
        "params": [
          {
            "bound": null,
            "default": null,
            "name": "T1",
            "type": "TypeParameter",
            "usesExtendsBound": false,
            "variance": null,
          },
          {
            "bound": null,
            "default": null,
            "name": "T2",
            "type": "TypeParameter",
            "usesExtendsBound": false,
            "variance": null,
          },
        ],
        "type": "TypeParameterDeclaration",
      },
    },
  ],
  "type": "Program",
}
`;

exports[`ComponentDeclaration type parameters ESTree 1`] = `
{
  "body": [
    {
      "body": {
        "body": [],
        "type": "BlockStatement",
      },
      "id": {
        "name": "Foo",
        "optional": false,
        "type": "Identifier",
        "typeAnnotation": null,
      },
      "params": [
        {
          "local": {
            "name": "bar",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "id": {
                  "name": "T1",
                  "optional": false,
                  "type": "Identifier",
                  "typeAnnotation": null,
                },
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
              },
            },
          },
          "name": {
            "name": "bar",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "shorthand": true,
          "type": "ComponentParameter",
        },
      ],
      "rendersType": {
        "operator": "renders",
        "type": "TypeOperator",
        "typeAnnotation": {
          "id": {
            "name": "T2",
            "optional": false,
            "type": "Identifier",
            "typeAnnotation": null,
          },
          "type": "GenericTypeAnnotation",
          "typeParameters": null,
        },
      },
      "type": "ComponentDeclaration",
      "typeParameters": {
        "params": [
          {
            "bound": null,
            "default": null,
            "name": "T1",
            "type": "TypeParameter",
            "usesExtendsBound": false,
            "variance": null,
          },
          {
            "bound": null,
            "default": null,
            "name": "T2",
            "type": "TypeParameter",
            "usesExtendsBound": false,
            "variance": null,
          },
        ],
        "type": "TypeParameterDeclaration",
      },
    },
  ],
  "type": "Program",
}
`;
