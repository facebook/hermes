/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 */

const HermesParserJSLibrary = {
  $JSReferences: {
    // Reference IDs must start at 1 to avoid being confused with the null pointer
    currentID: 1,
    references: {},

    /**
     * Store the given value and return a reference to it.
     */
    store: function(value) {
      const ref = JSReferences.currentID++;
      JSReferences.references[ref] = value;
      return ref;
    },

    /**
     * Lookup and return the stored value for a reference and remove it from the
     * internal references store.
     *
     * If the reference is 0 (corresponding to the null pointer), return null.
     */
    pop: function(ref) {
      if (ref == 0) {
        return null;
      }

      const value = JSReferences.references[ref];
      delete JSReferences.references[ref];

      return value;
    },

    /**
     * Return the string at a given pointer, returning null if the pointer is 0
     * (corresponding to the null pointer).
     */
    getString: function(pointer) {
      if (pointer == 0) {
        return null;
      }

      return UTF8ToString(pointer);
    },
  },

  buildArray: function() {
    return JSReferences.store([]);
  },

  appendToArray: function(arrayRef, elementRef) {
    JSReferences.references[arrayRef].push(JSReferences.pop(elementRef));
  },

  buildSourceLocation: function(
    startLine,
    startCol,
    endLine,
    endCol,
    rangeStart,
    rangeEnd,
  ) {
    return JSReferences.store({
      start: {
        line: startLine,
        column: startCol,
      },
      end: {
        line: endLine,
        column: endCol,
      },
      rangeStart: rangeStart,
      rangeEnd: rangeEnd,
    });
  },

  buildComment: function(loc, isBlock, valuePtr, valueLength) {
    return JSReferences.store({
      loc: JSReferences.pop(loc),
      type: isBlock ? 'Block' : 'Line',
      value: UTF8ToString(valuePtr, valueLength),
    });
  },

  buildProgramWithComments: function(loc, body, comments) {
    return JSReferences.store({
      type: 'Program',
      loc: JSReferences.pop(loc),
      body: JSReferences.pop(body),
      comments: JSReferences.pop(comments),
    });
  },

// Define wrapper functions for each node type. Numbers do not need to be wrapped.
#define NodeNumber
#define NodeLabel JSReferences.getString
#define NodeBoolean Boolean
#define NodePtr JSReferences.pop
#define NodeList JSReferences.pop

// Generate builder functions for each node in the Hermes AST
#define ESTREE_NODE_0_ARGS(NAME, ...) \
  build_##NAME : function(loc) {      \
    return JSReferences.store({       \
      type : #NAME,                   \
      loc : JSReferences.pop(loc),    \
    });                               \
  },

#define ESTREE_NODE_1_ARGS(NAME, BASE, ARG0TY, ARG0NM, ARG0OPT) \
  build_##NAME : function(loc, _##ARG0NM) {                     \
    return JSReferences.store({                                 \
      type : #NAME,                                             \
      loc : JSReferences.pop(loc),                              \
      ARG0NM : ARG0TY(_##ARG0NM),                               \
    });                                                         \
  },

#define ESTREE_NODE_2_ARGS(                                      \
    NAME, BASE, ARG0TY, ARG0NM, ARG0OPT, ARG1TY, ARG1NM, ARG1PT) \
  build_##NAME : function(loc, _##ARG0NM, _##ARG1NM) {           \
    return JSReferences.store({                                  \
      type : #NAME,                                              \
      loc : JSReferences.pop(loc),                               \
      ARG0NM : ARG0TY(_##ARG0NM),                                \
      ARG1NM : ARG1TY(_##ARG1NM),                                \
    });                                                          \
  },

#define ESTREE_NODE_3_ARGS(                                       \
    NAME,                                                         \
    BASE,                                                         \
    ARG0TY,                                                       \
    ARG0NM,                                                       \
    ARG0OPT,                                                      \
    ARG1TY,                                                       \
    ARG1NM,                                                       \
    ARG1PT,                                                       \
    ARG2TY,                                                       \
    ARG2NM,                                                       \
    ARG2PT)                                                       \
  build_##NAME : function(loc, _##ARG0NM, _##ARG1NM, _##ARG2NM) { \
    return JSReferences.store({                                   \
      type : #NAME,                                               \
      loc : JSReferences.pop(loc),                                \
      ARG0NM : ARG0TY(_##ARG0NM),                                 \
      ARG1NM : ARG1TY(_##ARG1NM),                                 \
      ARG2NM : ARG2TY(_##ARG2NM),                                 \
    });                                                           \
  },

#define ESTREE_NODE_4_ARGS(                                                  \
    NAME,                                                                    \
    BASE,                                                                    \
    ARG0TY,                                                                  \
    ARG0NM,                                                                  \
    ARG0OPT,                                                                 \
    ARG1TY,                                                                  \
    ARG1NM,                                                                  \
    ARG1PT,                                                                  \
    ARG2TY,                                                                  \
    ARG2NM,                                                                  \
    ARG2PT,                                                                  \
    ARG3TY,                                                                  \
    ARG3NM,                                                                  \
    ARG3PT)                                                                  \
  build_##NAME : function(loc, _##ARG0NM, _##ARG1NM, _##ARG2NM, _##ARG3NM) { \
    return JSReferences.store({                                              \
      type : #NAME,                                                          \
      loc : JSReferences.pop(loc),                                           \
      ARG0NM : ARG0TY(_##ARG0NM),                                            \
      ARG1NM : ARG1TY(_##ARG1NM),                                            \
      ARG2NM : ARG2TY(_##ARG2NM),                                            \
      ARG3NM : ARG3TY(_##ARG3NM),                                            \
    });                                                                      \
  },

#define ESTREE_NODE_5_ARGS(                                                    \
    NAME,                                                                      \
    BASE,                                                                      \
    ARG0TY,                                                                    \
    ARG0NM,                                                                    \
    ARG0OPT,                                                                   \
    ARG1TY,                                                                    \
    ARG1NM,                                                                    \
    ARG1PT,                                                                    \
    ARG2TY,                                                                    \
    ARG2NM,                                                                    \
    ARG2PT,                                                                    \
    ARG3TY,                                                                    \
    ARG3NM,                                                                    \
    ARG3PT,                                                                    \
    ARG4TY,                                                                    \
    ARG4NM,                                                                    \
    ARG4PT)                                                                    \
  build_##NAME                                                                 \
      : function(loc, _##ARG0NM, _##ARG1NM, _##ARG2NM, _##ARG3NM, _##ARG4NM) { \
    return JSReferences.store({                                                \
      type : #NAME,                                                            \
      loc : JSReferences.pop(loc),                                             \
      ARG0NM : ARG0TY(_##ARG0NM),                                              \
      ARG1NM : ARG1TY(_##ARG1NM),                                              \
      ARG2NM : ARG2TY(_##ARG2NM),                                              \
      ARG3NM : ARG3TY(_##ARG3NM),                                              \
      ARG4NM : ARG4TY(_##ARG4NM),                                              \
    });                                                                        \
  },

#define ESTREE_NODE_6_ARGS(        \
    NAME,                          \
    BASE,                          \
    ARG0TY,                        \
    ARG0NM,                        \
    ARG0OPT,                       \
    ARG1TY,                        \
    ARG1NM,                        \
    ARG1PT,                        \
    ARG2TY,                        \
    ARG2NM,                        \
    ARG2PT,                        \
    ARG3TY,                        \
    ARG3NM,                        \
    ARG3PT,                        \
    ARG4TY,                        \
    ARG4NM,                        \
    ARG4PT,                        \
    ARG5TY,                        \
    ARG5NM,                        \
    ARG5PT)                        \
  build_##NAME : function(         \
                     loc,          \
                     _##ARG0NM,    \
                     _##ARG1NM,    \
                     _##ARG2NM,    \
                     _##ARG3NM,    \
                     _##ARG4NM,    \
                     _##ARG5NM) {  \
    return JSReferences.store({    \
      type : #NAME,                \
      loc : JSReferences.pop(loc), \
      ARG0NM : ARG0TY(_##ARG0NM),  \
      ARG1NM : ARG1TY(_##ARG1NM),  \
      ARG2NM : ARG2TY(_##ARG2NM),  \
      ARG3NM : ARG3TY(_##ARG3NM),  \
      ARG4NM : ARG4TY(_##ARG4NM),  \
      ARG5NM : ARG5TY(_##ARG5NM),  \
    });                            \
  },

#define ESTREE_NODE_7_ARGS(        \
    NAME,                          \
    BASE,                          \
    ARG0TY,                        \
    ARG0NM,                        \
    ARG0OPT,                       \
    ARG1TY,                        \
    ARG1NM,                        \
    ARG1PT,                        \
    ARG2TY,                        \
    ARG2NM,                        \
    ARG2PT,                        \
    ARG3TY,                        \
    ARG3NM,                        \
    ARG3PT,                        \
    ARG4TY,                        \
    ARG4NM,                        \
    ARG4PT,                        \
    ARG5TY,                        \
    ARG5NM,                        \
    ARG5PT,                        \
    ARG6TY,                        \
    ARG6NM,                        \
    ARG6PT)                        \
  build_##NAME : function(         \
                     loc,          \
                     _##ARG0NM,    \
                     _##ARG1NM,    \
                     _##ARG2NM,    \
                     _##ARG3NM,    \
                     _##ARG4NM,    \
                     _##ARG5NM,    \
                     _##ARG6NM) {  \
    return JSReferences.store({    \
      type : #NAME,                \
      loc : JSReferences.pop(loc), \
      ARG0NM : ARG0TY(_##ARG0NM),  \
      ARG1NM : ARG1TY(_##ARG1NM),  \
      ARG2NM : ARG2TY(_##ARG2NM),  \
      ARG3NM : ARG3TY(_##ARG3NM),  \
      ARG4NM : ARG4TY(_##ARG4NM),  \
      ARG5NM : ARG5TY(_##ARG5NM),  \
      ARG6NM : ARG6TY(_##ARG6NM),  \
    });                            \
  },

#define ESTREE_NODE_8_ARGS(        \
    NAME,                          \
    BASE,                          \
    ARG0TY,                        \
    ARG0NM,                        \
    ARG0OPT,                       \
    ARG1TY,                        \
    ARG1NM,                        \
    ARG1PT,                        \
    ARG2TY,                        \
    ARG2NM,                        \
    ARG2PT,                        \
    ARG3TY,                        \
    ARG3NM,                        \
    ARG3PT,                        \
    ARG4TY,                        \
    ARG4NM,                        \
    ARG4PT,                        \
    ARG5TY,                        \
    ARG5NM,                        \
    ARG5PT,                        \
    ARG6TY,                        \
    ARG6NM,                        \
    ARG6PT,                        \
    ARG7TY,                        \
    ARG7NM,                        \
    ARG7PT)                        \
  build_##NAME : function(         \
                     loc,          \
                     _##ARG0NM,    \
                     _##ARG1NM,    \
                     _##ARG2NM,    \
                     _##ARG3NM,    \
                     _##ARG4NM,    \
                     _##ARG5NM,    \
                     _##ARG6NM,    \
                     _##ARG7NM) {  \
    return JSReferences.store({    \
      type : #NAME,                \
      loc : JSReferences.pop(loc), \
      ARG0NM : ARG0TY(_##ARG0NM),  \
      ARG1NM : ARG1TY(_##ARG1NM),  \
      ARG2NM : ARG2TY(_##ARG2NM),  \
      ARG3NM : ARG3TY(_##ARG3NM),  \
      ARG4NM : ARG4TY(_##ARG4NM),  \
      ARG5NM : ARG5TY(_##ARG5NM),  \
      ARG6NM : ARG6TY(_##ARG6NM),  \
      ARG7NM : ARG7TY(_##ARG7NM),  \
    });                            \
  },

#include "hermes/AST/ESTree.def"
};

autoAddDeps(HermesParserJSLibrary, '$JSReferences');

mergeInto(LibraryManager.library, HermesParserJSLibrary);
