name: build-apple-slices-hermes
description: This action builds hermesc for Apple platforms
inputs:
  slice:
    required: true
    description: The slice of hermes you want to build. It could be iphone, iphonesimulator, macos, catalyst, appletvos, appletvsimulator, xros, or xrossimulator
  flavor:
    required: true
    description: The flavor we want to build. It can be Debug or Release
runs:
  using: "composite"
  steps:
    - name: Setup xcode
      uses: ./.github/actions/setup-xcode
    - name: Restore HermesC Artifact
      uses: actions/download-artifact@v4
      with:
        name: hermesc-apple
        path: ./build_host_hermesc
    - name: Build the Hermes ${{ inputs.slice }} frameworks
      shell: bash
      run: |
        SLICE=${{ inputs.slice }}
        FLAVOR=${{ inputs.flavor }}
        FINAL_PATH=build_"$SLICE"_"$FLAVOR"
        echo "Final path for this slice is: $FINAL_PATH"

        if [[ -d "$FINAL_PATH" ]]; then
          echo "[HERMES] Skipping! Found the requested slice at $FINAL_PATH".
          exit 0
        fi

        if [[ "$ARTIFACTS_EXIST" ]]; then
          echo "[HERMES] Skipping! Artifacts exists already."
          exit 0
        fi

        # HermesC is used to build hermes, so it has to be executable
        chmod +x ./build_host_hermesc/bin/hermesc

        if [[ "$SLICE" == "macosx" ]]; then
          echo "[HERMES] Building Hermes for MacOS"

          chmod +x ./utils/build-mac-framework-rn.sh
          BUILD_TYPE="${{ inputs.flavor }}" ./utils/build-mac-framework-rn.sh
        else
          echo "[HERMES] Building Hermes for iOS: $SLICE"

          chmod +x ./utils/build-ios-framework-rn.sh
          BUILD_TYPE="${{ inputs.flavor }}" ./utils/build-ios-framework-rn.sh "$SLICE"
        fi

        echo "Moving from build_$SLICE to $FINAL_PATH"
        mv build_"$SLICE" "$FINAL_PATH"

        # check whether everything is there
        if [[ -d "$FINAL_PATH/API/hermes/hermes.framework" ]]; then
          echo "Successfully built hermes.framework for $SLICE in $FLAVOR"
        else
          echo "Failed to built hermes.framework for $SLICE in $FLAVOR"
          exit 1
        fi

        if [[ -d "$FINAL_PATH/API/hermes/hermes.framework.dSYM" ]]; then
          echo "Successfully built hermes.framework.dSYM for $SLICE in $FLAVOR"
        else
          echo "Failed to built hermes.framework.dSYM for $SLICE in $FLAVOR"
          echo "Please try again"
          exit 1
        fi
    - name: Compress slices to preserve Symlinks
      shell: bash
      run: |
        tar -czv -f build_${{ matrix.slice }}_${{ matrix.flavor }}.tar.gz build_${{ matrix.slice }}_${{ matrix.flavor }}
    - name: Upload Artifact for Slice (${{ inputs.slice }}, ${{ inputs.flavor }}}
      uses: actions/upload-artifact@v4.3.4
      with:
        name: slice-${{ inputs.slice }}-${{ inputs.flavor }}
        path: ./build_${{ inputs.slice }}_${{ inputs.flavor }}.tar.gz
