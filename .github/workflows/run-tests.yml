name: run-tests

on:
  workflow_call

jobs:
  test-macos:
    runs-on: macos-15
    steps:
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 16.2
    - uses: actions/checkout@v4.1.0
      with:
        path: hermes
    - name: Install CMake
      uses: ./hermes/.github/actions/install-cmake
    - name: Run MacOS regression tests in debug mode
      run: |-
        cmake -S hermes -B build -GXcode
        cmake --build ./build
        cmake --build ./build --target check-hermes
  test-linux:
    runs-on: ubuntu-22.04
    steps:
    - name: Install dependencies
      run: |-
        sudo apt update
        sudo apt install -y git openssh-client cmake build-essential \
            libicu-dev zip python3
    - uses: actions/checkout@v4.1.0
      with:
        path: hermes
    - name: Run Hermes regression tests
      run: |-
        cmake -S hermes -B build
        cmake --build build --target check-hermes all -j 4
  test-windows:
    runs-on: windows-2025
    steps:
    - uses: actions/checkout@v4.1.0
      with:
        path: hermes
    - name: Run Hermes regression tests
      run: |-
        cmake -S hermes -B build -G 'Visual Studio 17 2022'
        cmake --build build --target check-hermes -- -m /p:UseMultiToolTask=true -m /p:EnforceProcessCountAcrossBuilds=true
  test-e2e:
    runs-on: ubuntu-22.04
    env:
      ANDROID_NDK: /usr/local/lib/android/sdk/ndk/27.1.12297006
      HERMES_WS_DIR: /home/runner/work/hermes
      REACT_NATIVE_OVERRIDE_HERMES_DIR: /home/runner/work/hermes/hermes
    steps:
    - name: Install Node
      uses: actions/setup-node@v4.0.2
      with:
        node-version: 24
    - name: Install JDK
      uses: actions/setup-java@v3
      with:
        distribution: "temurin"
        java-version: "17"
    - name: Checkout Hermes
      uses: actions/checkout@v4.1.0
    - name: Checkout React Native
      run: |-
        cd "$HERMES_WS_DIR"
        git clone --depth=1 https://github.com/facebook/react-native
        cd react-native
        yarn install
        echo "console.log('Using Hermes: ' + (global.HermesInternal != null));" >> packages/rn-tester/js/RNTesterApp.android.js
    - name: Run RNTester
      uses: ReactiveCircus/android-emulator-runner@v2.30.1
      with:
        api-level: 29
        ndk: 27.1.12297006
        cmake: 3.22.1
        script: |
          cd ../react-native && ./gradlew -PreactNativeArchitectures=x86 :packages:rn-tester:android:app:installRelease
          adb shell am start com.facebook.react.uiapp/.RNTesterActivity
          timeout 30s adb logcat -e "Using Hermes: true" -m 1
  test-e2e-intl:
    runs-on: ubuntu-22.04
    env:
      HERMES_WS_DIR: /home/runner/work/hermes
      ANDROID_NDK: /usr/local/lib/android/sdk/ndk/27.1.12297006
    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
    - name: Checkout Hermes
      uses: actions/checkout@v4.1.0
    - name: Checkout Test262
      run: |-
        cd "$HERMES_WS_DIR"
        git clone https://github.com/tc39/test262
        cd test262
        git checkout 62626e083bd506124aac6c799464d76c2c42851b
    - name: Build Hermes Compiler
      run: |-
        cd "$HERMES_WS_DIR"
        cmake -S hermes -B ./build -DCMAKE_BUILD_TYPE=Release
        cmake --build ./build -j 4 --target hermesc
    - name: Run android tests
      id: tests
      uses: ReactiveCircus/android-emulator-runner@v2.30.1
      with:
        api-level: 29
        emulator-options: -timezone Europe/Paris -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        script: |
          adb logcat -c
          touch ./emulator.log
          chmod 777 ./emulator.log
          adb logcat >> ./emulator.log &
          cd android && ./gradlew :intltest:prepareTests && ./gradlew -Pabis=x86 :intltest:connectedAndroidTest
    - name: Upload emulator log
      if: always()
      uses: actions/upload-artifact@v4.3.4
      with:
        name: emulator.log
        path: emulator.log
  test-macos-test262:
    runs-on: macos-15
    steps:
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 16.2
    - uses: actions/checkout@v4.1.0
      with:
        path: hermes
    - name: Install CMake
      uses: ./hermes/.github/actions/install-cmake
    - name: Setup dependencies
      run: |-
        brew install ninja
        # Check out test262 at a pinned revision to reduce flakiness
        git clone https://github.com/tc39/test262
        cd test262
        git checkout 62626e083bd506124aac6c799464d76c2c42851b
    - name: Run Hermes tests and test262 with Intl
      run: |-
        cmake -S hermes -B build -GNinja -DHERMES_ENABLE_INTL=ON
        cmake --build ./build
        cmake --build ./build --target check-hermes
        python3 hermes/utils/testsuite/run_testsuite.py --test-intl test262/test -b build/bin
  test-linux-test262:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4.1.0
      with:
        path: hermes
    - name: Setup dependencies
      run: |-
        sudo apt update
        sudo apt install -y git openssh-client cmake build-essential \
            libreadline-dev libicu-dev zip python3
        # Check out test262 at a pinned revision to reduce flakiness
        git clone https://github.com/tc39/test262
        cd test262
        git checkout 62626e083bd506124aac6c799464d76c2c42851b
    - name: Run test262 with Intl
      run: |-
        cmake -S hermes -B build -DHERMES_ENABLE_INTL=ON -DCMAKE_CXX_FLAGS=-O2 -DCMAKE_C_FLAGS=-O2
        cmake --build ./build -j 4
        # Not running Hermes test until more of Intl is built out:
        # toLocaleLowerCase and toLocaleUpperCase are the two main ones.
        # cmake --build ./build --target check-hermes -j 4
        python3 hermes/utils/testsuite/run_testsuite.py --test-intl test262/test -b build/bin
  sandbox:
    runs-on: ubuntu-22.04
    container:
      image: emscripten/emsdk:3.1.39
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
    - name: Install dependencies
      run: |-
        apt update
        apt install -y libicu-dev tzdata
        wget https://github.com/WebAssembly/wabt/releases/download/1.0.33/wabt-1.0.33-ubuntu.tar.gz
        tar -xvf ./wabt-1.0.33-ubuntu.tar.gz
    - uses: actions/checkout@v4.1.0
      with:
        path: hermes
    - name: Build Hermes with Emscripten
      run: |-
        # Generate the host compiler.
        cmake -S hermes -B build_host
        cmake --build ./build_host --target hermesc -j 4
        # Generate and build the debug artefact.
        cmake -S hermes -B build_wasm_dbg \
          -DCMAKE_TOOLCHAIN_FILE=$EMSDK/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake \
          -DIMPORT_HOST_COMPILERS=build_host/ImportHostCompilers.cmake \
          -DCMAKE_BUILD_TYPE=Debug -DHERMES_UNICODE_LITE=ON \
          -DCMAKE_CXX_FLAGS=-O2  -DCMAKE_C_FLAGS=-O2 \
          -DCMAKE_EXE_LINKER_FLAGS="-sALLOW_MEMORY_GROWTH=1 -sSTACK_SIZE=256KB" \
          -DHERMES_ENABLE_DEBUGGER=OFF -DHERMES_SLOW_DEBUG=OFF
        cmake --build build_wasm_dbg --target hermesSandboxImpl -j 4
        ./wabt-1.0.33/bin/wasm2c build_wasm_dbg/API/hermes_sandbox/hermesSandboxImpl.wasm -n hermes \
          -o hermes/API/hermes_sandbox/external/hermes_sandbox_impl_dbg_compiled.c --num-outputs 8
        # Generate and build the release artefact.
        cmake -S hermes -B build_wasm_opt \
          -DCMAKE_TOOLCHAIN_FILE=$EMSDK/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake \
          -DIMPORT_HOST_COMPILERS=build_host/ImportHostCompilers.cmake \
          -DCMAKE_BUILD_TYPE=Release -DHERMES_UNICODE_LITE=ON \
          -DCMAKE_EXE_LINKER_FLAGS="-sALLOW_MEMORY_GROWTH=1 -sSTACK_SIZE=256KB -g2" \
          -DHERMES_ENABLE_DEBUGGER=OFF
        cmake --build build_wasm_opt --target hermesSandboxImpl -j 4
        ./wabt-1.0.33/bin/wasm2c build_wasm_opt/API/hermes_sandbox/hermesSandboxImpl.wasm -n hermes \
          -o hermes/API/hermes_sandbox/external/hermes_sandbox_impl_opt_compiled.c --num-outputs 8
    - name: Build and test with the newly generated sandbox
      run: |-
        cmake -S hermes -B build_dbg -DCMAKE_BUILD_TYPE=Debug
        cmake --build build_dbg -j 4
        cmake --build build_dbg --target check-hermes -j 4
        cmake -S hermes -B build_opt -DCMAKE_BUILD_TYPE=Release
        cmake --build build_opt -j 4
        cmake --build build_opt --target check-hermes -j 4
