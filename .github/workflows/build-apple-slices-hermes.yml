name: build-apple-slices-hermes

on:
  workflow_call:
    inputs:
      release-type:
        required: true
        description: The type of release we are building. It could be commitly, release or dry-run
        type: string
      hermes-version:
        required: true
        description: The Hermes version to use for this build
        type: string

jobs:
  build_apple_slices_hermes:
    runs-on: macos-14
    env:
      IOS_DEPLOYMENT_TARGET: "15.1"
      XROS_DEPLOYMENT_TARGET: "1.0"
      MAC_DEPLOYMENT_TARGET: "10.15"
    strategy:
      fail-fast: false
      matrix:
        flavor: [Debug, Release]
        slice: [macosx, iphoneos, iphonesimulator, appletvos, appletvsimulator, catalyst, xros, xrsimulator]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup git safe folders
      shell: bash
      run: git config --global --add safe.directory '*'
    - name: Setup node.js
      uses: ./.github/actions/setup-node
    - name: Install node dependencies
      uses: ./.github/actions/yarn-install
    - name: Set artifacts version
      shell: bash
      run: node ./utils/scripts/hermes/set-artifacts-version.js --build-type ${{ inputs.release-type }} --hermesVersion "${{ inputs.hermes-version }}"
    - name: Setup xcode
      uses: ./.github/actions/setup-xcode
    - name: Restore HermesC Artifact
      uses: actions/download-artifact@v4
      with:
        name: hermesc-apple
        path: ./build_host_hermesc
    - name: Build the Hermes ${{ matrix.slice }} frameworks
      shell: bash
      run: |
        SLICE=${{ matrix.slice }}
        FLAVOR=${{ matrix.flavor }}
        FINAL_PATH=build_"$SLICE"_"$FLAVOR"
        echo "Final path for this slice is: $FINAL_PATH"

        # HermesC is used to build hermes, so it has to be executable
        chmod +x ./build_host_hermesc/bin/hermesc

        if [[ "$SLICE" == "macosx" ]]; then
          echo "[HERMES] Building Hermes for MacOS"

          chmod +x ./utils/build-mac-framework.sh
          BUILD_TYPE="${{ matrix.flavor }}" ./utils/build-mac-framework.sh
        else
          echo "[HERMES] Building Hermes for iOS: $SLICE"

          chmod +x ./utils/build-ios-framework.sh
          BUILD_TYPE="${{ matrix.flavor }}" ./utils/build-ios-framework.sh "$SLICE"
        fi

        echo "Moving from build_$SLICE to $FINAL_PATH"
        mv build_"$SLICE" "$FINAL_PATH"

        # check whether everything is there
        if [[ -d "$FINAL_PATH/lib/hermesvm.framework" ]]; then
          echo "Successfully built hermesvm.framework for $SLICE in $FLAVOR"
        else
          echo "Failed to built hermesvm.framework for $SLICE in $FLAVOR"
          exit 1
        fi

        if [[ -d "$FINAL_PATH/lib/hermesvm.framework.dSYM" ]]; then
          echo "Successfully built hermesvm.framework.dSYM for $SLICE in $FLAVOR"
        else
          echo "Failed to built hermesvm.framework.dSYM for $SLICE in $FLAVOR"
          echo "Please try again"
          exit 1
        fi
    - name: Compress slices to preserve Symlinks
      shell: bash
      run: |
        tar -czv -f build_${{ matrix.slice }}_${{ matrix.flavor }}.tar.gz build_${{ matrix.slice }}_${{ matrix.flavor }}
    - name: Upload Artifact for Slice (${{ matrix.slice }}, ${{ matrix.flavor }}}
      uses: actions/upload-artifact@v4.3.4
      with:
        name: slice-${{ matrix.slice }}-${{ matrix.flavor }}
        path: ./build_${{ matrix.slice }}_${{ matrix.flavor }}.tar.gz
