name: publish

on:
  workflow_call:
    inputs:
      release-type:
        required: true
        description: The type of release we are building. It could be commitly, release or dry-run
        type: string

jobs:
  publish:
    runs-on: 8-core-ubuntu
    container:
      image: reactnativecommunity/react-native-android:latest
      env:
        TERM: "dumb"
        GRADLE_OPTS: "-Dorg.gradle.daemon=false"
    env:
      HERMES_WS_DIR: /tmp/hermes
      ORG_GRADLE_PROJECT_SIGNING_PWD: ${{ secrets.ORG_GRADLE_PROJECT_SIGNING_PWD }}
      ORG_GRADLE_PROJECT_SIGNING_KEY: ${{ secrets.ORG_GRADLE_PROJECT_SIGNING_KEY }}
      ORG_GRADLE_PROJECT_SONATYPE_USERNAME: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPE_USERNAME }}
      ORG_GRADLE_PROJECT_SONATYPE_PASSWORD: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPE_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup git safe folders
        shell: bash
        run: git config --global --add safe.directory '*'
      - name: Create /tmp/hermes/osx-bin directory
        shell: bash
        run: mkdir -p /tmp/hermes/osx-bin
      - name: Download osx-bin release artifacts
        uses: actions/download-artifact@v4
        with:
          name: hermes-osx-bin-Release
          path: /tmp/hermes/osx-bin/Release
      - name: Download osx-bin debug artifacts
        uses: actions/download-artifact@v4
        with:
          name: hermes-osx-bin-Debug
          path: /tmp/hermes/osx-bin/Debug
      - name: Download darwin-bin release artifacts
        uses: actions/download-artifact@v4
        with:
          name: hermes-darwin-bin-Release
          path: /tmp/hermes/hermes-runtime-darwin
      - name: Download darwin-bin debug artifacts
        uses: actions/download-artifact@v4
        with:
          name: hermes-darwin-bin-Debug
          path: /tmp/hermes/hermes-runtime-darwin
      - name: Download hermes dSYM debug artifacts
        uses: actions/download-artifact@v4
        with:
          name: hermes-dSYM-Debug
          path: /tmp/hermes/dSYM/Debug
      - name: Download hermes dSYM release vartifacts
        uses: actions/download-artifact@v4
        with:
          name: hermes-dSYM-Release
          path: /tmp/hermes/dSYM/Release
      - name: Download windows-bin artifacts
        uses: actions/download-artifact@v4
        with:
          name: hermes-win64-bin
          path: /tmp/hermes/win64-bin
      - name: Download linux-bin artifacts
        uses: actions/download-artifact@v4
        with:
          name: hermes-linux-bin
          path: /tmp/hermes/linux64-bin
      - name: Show /tmp/hermes directory
        shell: bash
        run: ls -lR /tmp/hermes
      - name: Setup node.js
        uses: ./.github/actions/setup-node
      - name: Install dependencies
        uses: ./.github/actions/yarn-install
      - name: Copy Hermes binaries
        shell: bash
        run: |
          node ./utils/scripts/hermes/prepare-artifacts.js
      - name: Print Artifacts Directory
        shell: bash
        run: ls -lR ./android/ios-artifacts/artifacts/
      - name: Publish artifacts
        shell: bash
        run: |
          node ./utils/scripts/hermes/publish-artifacts.js -t ${{ inputs.release-type }}
      - name: Publish to npm
        shell: bash
        run: |
          node ./utils/scripts/hermes/publish-npm.js -t ${{ inputs.release-type }}
